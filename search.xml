<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RustDesk远程桌面自建服务器</title>
      <link href="/posts/42858/"/>
      <url>/posts/42858/</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-03-14</p></div></div><div class='timeline-item-content'><ol><li>init</li></ol></div></div></div><hr><p>ToDesk使用了几天后因为一直没关机，在当月中旬用完了所有额度，不让继续免费使用了，直接卸载告别切换到rustdesk，使用Self-host，免费而且帧率，分辨率都比ToDesk免费版高多了，下面是搭建的记录。</p><h1 id="基本环境搭建"><a href="#基本环境搭建" class="headerlink" title="基本环境搭建"></a>基本环境搭建</h1><p>我是使用两台windows(win10)和一台Ubuntu(配置如下图)，通过Ubuntu作为ID/中继服务器，让一台Windows连接到另一台Windows，Ubuntu需要安装Docker，两台windows需要安装rustdesk并进行一些配置。<br><div class="tip warning faa-horizontal animated"><p>注意：我的三台机器是在同一局域网下的。</p></div></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/pc_environment.png" alt="硬件环境"></p><h2 id="安装-Docker-和-docker-compose-plugin"><a href="#安装-Docker-和-docker-compose-plugin" class="headerlink" title="安装 Docker 和 docker-compose-plugin"></a>安装 Docker 和 docker-compose-plugin</h2><p>参考：<br>   <div class="tag link"><a class="link-card" title="Docker在Ubuntu安装" href="https://docs.docker.com/engine/install/ubuntu/"><div class="left"><img src="https://docs.docker.com/favicons/docs@2x.ico"/></div><div class="right"><p class="text">Docker在Ubuntu安装</p><p class="url">https://docs.docker.com/engine/install/ubuntu/</p></div></a></div><br>安装完成后，可以把当前用户加入到docker用户组<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加docker用户组，一般已存在，不需要执行</span></span><br><span class="line"><span class="built_in">sudo</span> groupadd docker</span><br><span class="line"><span class="comment"># 添加当前用户到docker用户组</span></span><br><span class="line"><span class="built_in">sudo</span> gpasswd -a <span class="variable">$USER</span> docker</span><br><span class="line"><span class="comment"># 更新用户组</span></span><br><span class="line">newgrp docker</span><br><span class="line">docker version</span><br></pre></td></tr></table></figure></p><h2 id="docker-compose-yaml"><a href="#docker-compose-yaml" class="headerlink" title="docker-compose.yaml"></a>docker-compose.yaml</h2><p>参考官方文档：<br>   <div class="tag link"><a class="link-card" title="RustDesk自建服务器" href="https://rustdesk.com/docs/en/self-host/rustdesk-server-oss/docker/"><div class="left"><img src="https://rustdesk.com/docs/images/favicon.png"/></div><div class="right"><p class="text">RustDesk自建服务器</p><p class="url">https://rustdesk.com/docs/en/self-host/rustdesk-server-oss/docker/</p></div></a></div></p><p>如果开启了ufw，需要打开这些端口：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ufw status</span><br><span class="line"><span class="built_in">sudo</span> ufw allow 21114:21119/tcp</span><br><span class="line"><span class="built_in">sudo</span> ufw allow 8000/tcp</span><br><span class="line"><span class="built_in">sudo</span> ufw allow 21116/udp</span><br></pre></td></tr></table></figure><br>选一个目录用来存放ID/中继服务器数据：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/rustdesk</span><br><span class="line"><span class="built_in">cd</span> ~/rustdesk</span><br><span class="line"><span class="built_in">touch</span> docker-compose.yaml</span><br></pre></td></tr></table></figure><br>下面是docker-compose.yaml文件，是上面的rustdesk官方文档的：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">hbbs:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbs</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/root</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">&quot;host&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">hbbr:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rustdesk/rustdesk-server:latest</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">hbbr</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/root</span></span><br><span class="line">    <span class="attr">network_mode:</span> <span class="string">&quot;host&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br></pre></td></tr></table></figure><br>然后启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker compose up -d</span><br><span class="line"><span class="comment"># 进入~/rustdesk/data文件夹中</span></span><br><span class="line"><span class="built_in">cd</span> data</span><br><span class="line"><span class="comment"># 查看key</span></span><br><span class="line"><span class="built_in">cat</span> id_*.pub</span><br></pre></td></tr></table></figure></p><h2 id="rustdesk安装配置"><a href="#rustdesk安装配置" class="headerlink" title="rustdesk安装配置"></a>rustdesk安装配置</h2><p>安装访问以下链接：<br><div class="tag link"><a class="link-card" title="RustDesk安装" href="https://github.com/rustdesk/rustdesk/releases"><div class="left"><img src="https://github.githubassets.com/favicons/favicon.png"/></div><div class="right"><p class="text">RustDesk安装</p><p class="url">https://github.com/rustdesk/rustdesk/releases</p></div></a></div><br>安装好后，打开网络设置，将ID/中继服务器的IP也就是跑Docker的那个服务器IP地址填写到ID服务器和中继服务器中，被控端可以不填写中继服务器，控制端建议填写，然后控制端填写key（上面data文件下的.pub文件的内容）。</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250314214834213.png" alt="windows rustdesk网络配置"></p><p>最后输入被控端的ID和密码连接即可。</p>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSAPP Data Lab</title>
      <link href="/posts/42856/"/>
      <url>/posts/42856/</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-03-07</p></div></div><div class='timeline-item-content'><p>写到howManyBits</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-03-07</p></div></div><div class='timeline-item-content'><p>写完了，再一次感觉这个实验不错</p></div></div></div><hr><p>最近担任计算机系统助教要验收这个CSAPP的实验，这个实验本科的时候就做过，但过了这么久基本忘完了，遂重新做一遍记录于此。</p><h1 id="实验环境搭建"><a href="#实验环境搭建" class="headerlink" title="实验环境搭建"></a>实验环境搭建</h1><p>我是在win10 WSL2环境下做的：</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250304165220672.png" alt="实验环境"></p><p>具体如何搭建环境参考下面这个链接，有脚本一键搭建运行环境，非常方便：<br><div class="tag link"><a class="link-card" title="CSAPP环境搭建" href="https://zhuanlan.zhihu.com/p/505497911"><div class="left"><img src="https://static.zhihu.com/heifetz/favicon.ico"/></div><div class="right"><p class="text">CSAPP环境搭建</p><p class="url">https://zhuanlan.zhihu.com/p/505497911</p></div></a></div></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>在bits.c中完成函数实现，但对代码有一定的限制<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检测代码是否符合要求的规范</span></span><br><span class="line">./dlc bits.c</span><br><span class="line"><span class="comment"># 查看分数</span></span><br><span class="line">make clean </span><br><span class="line">make </span><br><span class="line">./btest</span><br></pre></td></tr></table></figure></p><h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><h2 id="bitXor"><a href="#bitXor" class="headerlink" title="bitXor"></a>bitXor</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * bitXor - x^y using only ~ and &amp; </span></span><br><span class="line"><span class="comment"> *   Example: bitXor(4, 5) = 1</span></span><br><span class="line"><span class="comment"> *   Legal ops: ~ &amp;</span></span><br><span class="line"><span class="comment"> *   Max ops: 14</span></span><br><span class="line"><span class="comment"> *   Rating: 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">bitXor</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>要求只用~(按位取反)和&amp;(按位与)实现异或，可以使用离散数学中的等值演算，异或即“相同为0，不同为1”：</p><script type="math/tex; mode=display">x \oplus y = \lnot (\lnot x \land \lnot y) \land \lnot ( x \land y)</script><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">bitXor</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123; </span><br><span class="line">  <span class="keyword">return</span> ( ~(~x &amp; ~y)) &amp; (~(x &amp; y));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="tmin"><a href="#tmin" class="headerlink" title="tmin"></a>tmin</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * tmin - return minimum two&#x27;s complement integer </span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 4</span></span><br><span class="line"><span class="comment"> *   Rating: 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">tmin</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>返回最小的二进制补码整数，关于原码，反码，补码定义如下：</p><div class="table-container"><table><thead><tr><th>表示方法</th><th>定义</th></tr></thead><tbody><tr><td>原码</td><td>最高位为符号位（0 表示正数，1 表示负数），其余位表示数值的绝对值</td></tr><tr><td>反码</td><td>正数的反码与原码相同；负数的反码是符号位不变，其余位按位取反</td></tr><tr><td>补码</td><td>正数的补码与原码相同；负数的补码是其反码加 1</td></tr></tbody></table></div><p>补码的编码具有不对称性，除了最小的负数其他负数都其正数与之对应，在 64 位系统中，整数的补码表示范围是：</p><ul><li>最小负数：0x8000000000000000（即 -2^63）。</li><li>最大正数：0x7FFFFFFFFFFFFFFF（即 2^63 - 1）</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">tmin</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span> &lt;&lt; <span class="number">31</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isTmax"><a href="#isTmax" class="headerlink" title="isTmax"></a>isTmax</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * isTmax - returns 1 if x is the maximum, two&#x27;s complement number,</span></span><br><span class="line"><span class="comment"> *     and 0 otherwise </span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | +</span></span><br><span class="line"><span class="comment"> *   Max ops: 10</span></span><br><span class="line"><span class="comment"> *   Rating: 1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isTmax</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>如果x是二进制补码最大值则返回1,否则返回0。</li><li>最大值是0x7FFFFFFF，它的特点是最高位为0其余为1，那么0x7FFFFFFF+0x1后变为0x800000000，最高位为1其余为0，其特点正好相反。</li><li>这里需要用到异或的特性，如x^target，x取反后与target异或，由于异或是不同为1相同为0，则只有当x与target完全相同时，x^target才会为0x0，那么加上!操作符就能得到!(x^target)即x与target相同时为1,不同时为0。<br>对于0x7FFFFFFF，它加1后为0x80000000，由于特点正好相反，取反后有变为0x7FFFFFFF,故可以利用异或判断是否相同即：!(~(x+1)^x) 。</li><li>继续思考，是不是只有0x7FFFFFFF才满足这样的特性：+1后相当于按位取反？显然0xFFFFFFFF也满足这个特性，这是因为溢出时最高位被丢弃变为0x0。所以我们还需要构造一个表达式与!(~(x+1)^x) 相与记为expression1，即!(~(x+1)^x) &amp; expression1。当x为0x7FFFFFFF时expression1为1，当x为0xFFFFFFFF时为0。</li><li>排除的方法必定需要利用0x7FFFFFFF有而0xFFFFFFFF没有的特点0，即这两个数的区别，而最简单的区别就是0x7FFFFFFF+0x1后变为0x8FFFFFFF是个非零数，而0xFFFFFFFF+0x1后变为0。故!(x+1)在x为0x7FFFFFFF时为0，在x为0xFFFFFFFF时为1，!(x+1)与需要的正好相反，再加上一个!运算即可，即：<p class='p center logo small'>!( ~(x + 1) ^ x) & !!(x + 1)</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isTmax</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> !( ~(x + <span class="number">1</span>) ^ x) &amp; !!(x + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="allOddBits"><a href="#allOddBits" class="headerlink" title="allOddBits"></a>allOddBits</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * allOddBits - return 1 if all odd-numbered bits in word set to 1</span></span><br><span class="line"><span class="comment"> *   where bits are numbered from 0 (least significant) to 31 (most significant)</span></span><br><span class="line"><span class="comment"> *   Examples allOddBits(0xFFFFFFFD) = 0, allOddBits(0xAAAAAAAA) = 1</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 12</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">allOddBits</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>如果所有奇数位的比特位是1返回1，否则返回0，即一个数只要其1,3,5,7…位为1（其余位不用管）返回1，否则返回0。</li><li>我们可以去除所有的偶数位的影响，看奇数位，比如让x与0xAAAAAAAA相与，则所有的偶数位都为0，再看其是否和0xAAAAAAAA相同（利用isTmax中阐述的通过按位与判断两个数是否相同）。也可以让x与0x55555555相或，则所有的偶数位为1，再看其是否和0xFFFFFFFF相同。即：<p class='p center logo small'>!((x|0x55555555)^0xFFFFFFFF)</p><p class='p center logo small'>!((x&0xAAAAAAAA)^(0xAAAAAAAA))</p></li><li>但是由于实验要求的限制条件，不只直接写0xAAAAAAAA这种，只能写0xAA，通过位运算得到0xAAAAAAAA</li></ul><div class="tip warning faa-horizontal animated"><p>注意：根据C规范移位运算优先级低于加减</p></div><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250307163658185.png" alt="https://en.cppreference.com/w/c/language/operator_precedence"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">allOddBits</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="comment">// return !((x|0x55555555)^0xFFFFFFFF);</span></span><br><span class="line">  <span class="comment">// return !((x&amp;0xAAAAAAAA)^(0xAAAAAAAA));</span></span><br><span class="line">  <span class="type">int</span> a = <span class="number">0xAA</span>&lt;&lt;<span class="number">8</span>;<span class="comment">//0x00AA</span></span><br><span class="line">  <span class="type">int</span> b = a | <span class="number">0xAA</span>;<span class="comment">//0xAAAA</span></span><br><span class="line">  <span class="type">int</span> c = b&lt;&lt;<span class="number">16</span> | b;<span class="comment">//0xAAAAAAAA</span></span><br><span class="line">  <span class="keyword">return</span> !((x&amp;c)^c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="negate"><a href="#negate" class="headerlink" title="negate"></a>negate</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * negate - return -x </span></span><br><span class="line"><span class="comment"> *   Example: negate(1) = -1.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 5</span></span><br><span class="line"><span class="comment"> *   Rating: 2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">negate</span><span class="params">(<span class="type">int</span> x)</span> &#123; </span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>返回x的负数</li><li>我们知道：<p class='p center logo small'>x+(-x)=0</p><p class='p center logo small'>x+(~x)=-1</p></li><li>两式子相减得到：<p class='p center logo small'>-x=~x+1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">negate</span><span class="params">(<span class="type">int</span> x)</span> &#123; </span><br><span class="line">  <span class="keyword">return</span> ~x+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isAsciiDigit"><a href="#isAsciiDigit" class="headerlink" title="isAsciiDigit"></a>isAsciiDigit</h2>题目：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * isAsciiDigit - return 1 if 0x30 &lt;= x &lt;= 0x39 (ASCII codes for characters &#x27;0&#x27; to &#x27;9&#x27;)</span></span><br><span class="line"><span class="comment"> *   Example: isAsciiDigit(0x35) = 1.</span></span><br><span class="line"><span class="comment"> *            isAsciiDigit(0x3a) = 0.</span></span><br><span class="line"><span class="comment"> *            isAsciiDigit(0x05) = 0.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 15</span></span><br><span class="line"><span class="comment"> *   Rating: 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isAsciiDigit</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>检测x是否属于ascii的数字，简单来说是判断x是否在0x30和0x39之间。</li><li>在汇编中判断大小是通过减法置标志位来完成的，因此我们可以通过让0x30和0x39分别减去x再取符号位，看是否满足：0x30-x应该小于0符号位为1，0x39-x&gt;0符号位为0，但是若是x落在边界时,如x==0x30，0x30-x为0符号位为0也是满足要求的，因此我们可以把&lt;=变为&lt;：<p class='p center logo small'>0x30<= x <= 0x39</p>上式等价于：<p class='p center logo small'>0x2F< x <= 0x39</p>那么右边x<0x39是否需要等价转换?0x39-x应该大于或等于0，符号位为0，0x39-x<0符号位为1，经分析边界条件是囊括的所以不需要等价转换（转换后会把边界条件排出）。让0x2F-x符号位为1，0x39-x符号位为0，必须同时满足这两个条件，首先先看0x2F< x，相减后如何提取符号位？可以通过算数右移，移动31位符号位占满整个32位，即若0x2F-x<0，则(0x2F+(~x+1))>&gt;31为0xFFFFFFFF，若0x2F-x&gt;=0,(0x2F+(~x+1))&gt;&gt;31为0;<p class='p center logo small'>(0x2F+(~x+1))>>31</p>再看x &lt;= 0x39，同样的方法，若0x39-x<0，则(0x39+(~x+1))>&gt;31为0xFFFFFFFF，若0x39-x&gt;=0,(0x39+(~x+1))&gt;&gt;31为0;我们取个反就可以满足<p class='p center logo small'>~((0x39+(~x+1))>>31)</p>需要同时满足上述两个条件，故<p class='p center logo small'>(0x2F + (~x + 1)) >> 31 & ~((0x39 + (~x + 1)) >> 31)</p>由于最后返回1或0，我们取最低位即可：<p class='p center logo small'>(0x2F + (~x + 1)) >> 31 & ~((0x39 + (~x + 1)) >> 31) & 0x1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isAsciiDigit</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="type">int</span> low = (<span class="number">0x2F</span> + (~x + <span class="number">1</span>)) &gt;&gt; <span class="number">31</span>;  <span class="comment">// 0x2F - x &lt; 0 =&gt; x &gt; 0x2F (即 x &gt;= 0x30)</span></span><br><span class="line">  <span class="type">int</span> high = ~((<span class="number">0x39</span> + (~x + <span class="number">1</span>)) &gt;&gt; <span class="number">31</span>);  <span class="comment">// 0x39 - x &gt;= 0 =&gt; x &lt;= 0x39</span></span><br><span class="line">  <span class="keyword">return</span> low &amp; high &amp; <span class="number">0x1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="conditional"><a href="#conditional" class="headerlink" title="conditional"></a>conditional</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * conditional - same as x ? y : z </span></span><br><span class="line"><span class="comment"> *   Example: conditional(2,4,5) = 4</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 16</span></span><br><span class="line"><span class="comment"> *   Rating: 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">conditional</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> z)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>conditional的表达式和 x ? y : z 相同</li><li>要实现这种根据x的值判断返回y还是返回z，仅仅使用位运算非常难，因为虽然我们很容易判断x是否为0，但我们很难将x与yz同时关联起来，所以我们把希望留给加法运算，假设返回这样的式子：<p class='p center logo small'>a+y+z</p>当x!=0时，让a=-z=~z+1；当x==0时，让a=-y=~y+1就可以满足要求，但是这个要求同样难以满足，因为a既与y有关又与z有关，而a又由x是否为0来决定，因此我们考虑将a拆分：<p class='p center logo small'>b+c+y+z</p>当x为非0时，让b=0，c=-z=~z+1；当x为0时，让b=-y=~y+1，c=0。这样可以让b只与y有关，c只与z有关。<br>首先我们要判断x是否为0，这个不难，使用!运算即可，当x为非零则为0，当x为0则为1，我们首先关注b，!x==0时，b要为0，!x!=0时，b要为~z+1，显然与运算可以满足：<p class='p center logo small'>b = !x&(~y+1)</p>但是当!x!=0时，!x==1，而它与~z+1按位与只会留下最低位不一定是~z+1，因此我们需要让x!=0时得到0xFFFFFFFF，x==0时得到0，因此我们定义a：<p class='p center logo small'>a = ~(!x)+1</p>当x为0时,!x==1,~(!x)==0xFFFFFFFE,a==0xFFFFFFFF；当x为非零时，!x==0，~(!x)==0xFFFFFFFF，a==0，因此b的表达式应为<p class='p center logo small'>b = a&(~y+1)</p>再关注c，c的情况刚好与b相反，那么只需要给a再加一个~即可<p class='p center logo small'>c = ~a&(~z+1)</p>这里不用担心加法溢出问题</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">conditional</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> z)</span> &#123;</span><br><span class="line">  <span class="type">int</span> a = ~(!x)+<span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> b = a&amp;(~y+<span class="number">1</span>);</span><br><span class="line">  <span class="type">int</span> c = ~a&amp;(~z+<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> b+y+c+z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="isLessOrEqual"><a href="#isLessOrEqual" class="headerlink" title="isLessOrEqual"></a>isLessOrEqual</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * isLessOrEqual - if x &lt;= y  then return 1, else return 0 </span></span><br><span class="line"><span class="comment"> *   Example: isLessOrEqual(4,5) = 1.</span></span><br><span class="line"><span class="comment"> *   Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 24</span></span><br><span class="line"><span class="comment"> *   Rating: 3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isLessOrEqual</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>如果x&lt;=y那么返回 1，否则返回0</li><li>比大小利用减法，让y-x如果y-x&gt;=0即符号位为0则返回1，如果y-x&lt;0即符号位为1则返回0，y-x=y+~x+1，然后右移31位后取符号位,我们需要一个取反操作以满足符号位为0返回1，符号位为1则返回0:<p class='p center logo small'>~((y+(~x+1))>>31) & 0x1</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">isLessOrEqual</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> ~((y+(~x+<span class="number">1</span>))&gt;&gt;<span class="number">31</span>) &amp;<span class="number">0x1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="logicalNeg"><a href="#logicalNeg" class="headerlink" title="logicalNeg"></a>logicalNeg</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * logicalNeg - implement the ! operator, using all of </span></span><br><span class="line"><span class="comment"> *              the legal operators except !</span></span><br><span class="line"><span class="comment"> *   Examples: logicalNeg(3) = 0, logicalNeg(0) = 1</span></span><br><span class="line"><span class="comment"> *   Legal ops: ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *   Max ops: 12</span></span><br><span class="line"><span class="comment"> *   Rating: 4 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">logicalNeg</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>实现!运算符，即对于!x，当x为0时返回1，当x为非0时返回0</li><li>0和非零最直观的区别就在与0的每一位都是0，而非零至少有一位为1，但因为我们无法利用循环移位操作来判断，故只能另辟蹊径</li><li>0的和非零的另一个不同特点在于0的负数还是0，即~0+1=0，而非零数的负数不是0，我们可以利用这点，看x的负数是否与它自己相同，前面我们用到过一个技巧通过异或来判断两数是否相同：这个表达式在x等于0时返回0，x等于非零时返回非零，但是这样等于没做<p class='p center logo small'>(~x+1)^x</p>我们可以利用另一点，非零数的负数和原来这个数的符号位肯定相反，一个必是1，一个必是0，而0的负数的符号位和0的符号位都是0，因此我们只需要将两者相与就能得到：非零时该表达式符号位为1，为0时该表达式符号位0<p class='p center logo small'>(~x+1)|x</p>接下来就是提取符号位了，顺便取个反，因为我们要求为0时返回1，为1时返回0，这个技巧我们在上面的题目用到过：即将其向右算数移位31位并取反，然后与0x1相与取最低位：<p class='p center logo small'>~(((~x+1)|x)>>31) & 0x1</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">logicalNeg</span><span class="params">(<span class="type">int</span> x)</span> &#123; </span><br><span class="line">   <span class="keyword">return</span> ~(((~x+<span class="number">1</span>)|x)&gt;&gt;<span class="number">31</span>) &amp; <span class="number">0x1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="howManyBits"><a href="#howManyBits" class="headerlink" title="howManyBits"></a>howManyBits</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* howManyBits - return the minimum number of bits required to represent x in</span></span><br><span class="line"><span class="comment"> *             two&#x27;s complement</span></span><br><span class="line"><span class="comment"> *  Examples: howManyBits(12) = 5</span></span><br><span class="line"><span class="comment"> *            howManyBits(298) = 10</span></span><br><span class="line"><span class="comment"> *            howManyBits(-5) = 4</span></span><br><span class="line"><span class="comment"> *            howManyBits(0)  = 1</span></span><br><span class="line"><span class="comment"> *            howManyBits(-1) = 1</span></span><br><span class="line"><span class="comment"> *            howManyBits(0x80000000) = 32</span></span><br><span class="line"><span class="comment"> *  Legal ops: ! ~ &amp; ^ | + &lt;&lt; &gt;&gt;</span></span><br><span class="line"><span class="comment"> *  Max ops: 90</span></span><br><span class="line"><span class="comment"> *  Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">howManyBits</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>返回以二进制补码的形式表示x需要几个比特数，其实就是看这个数的最高位1在第几位，然后加上1位符号位，这个问题有点难度，主要是有点难想到，下面是别人的实现方法。</li><li>这里用到二分法：<br>先考虑正数和0</li></ul><ol><li>高 16 位：检查高 16 位是否有 1，如果有，则至少需要 16 位。</li><li>高 8 位：在剩下的 16 位中，检查高 8 位是否有 1。</li><li>高 4 位：在剩下的 8 位中，检查高 4 位是否有 1。</li><li>高 2 位：在剩下的 4 位中，检查高 2 位是否有 1。</li><li>高 1 位：在剩下的 2 位中，检查高 1 位是否有 1。</li><li>最低位：最后剩下的 1 位。<br>最终，将所有部分的位数相加，并加 1（符号位）。</li></ol><ul><li>对负数的处理：<br>flag 是 x &gt;&gt; 31，即符号位。如果 x 是负数，flag 为 1；否则为 0。</li></ul><ol><li>如果 x 是负数（flag == 1），则 x 被取反：x = ~x。</li><li>如果 x 是非负数（flag == 0），则 x 保持不变。<br>负数的补码表示中，符号位和数值部分是混合在一起的。如果直接计算负数的有效位数，符号位会导致结果错误。例如：<br>-1 的补码是 11111111 11111111 11111111 11111111，如果直接计算位数，会得到 32 位，但实际上我们只关心其有效位数。<br>通过取反操作，负数的补码表示会被转换为正数，其二进制表示中的有效位数与原来的负数相同。例如：</li></ol><ul><li>-1 的补码是 11111111 11111111 11111111 11111111，取反后为 00000000 00000000 00000000 00000000，有效位数为 1。</li><li>-2 的补码是 11111111 11111111 11111111 11111110，取反后为 00000000 00000000 00000000 00000001，有效位数为 2。</li></ul><div class="tag link"><a class="link-card" title="howManyBits" href="https://zhuanlan.zhihu.com/p/559005736"><div class="left"><img src="https://static.zhihu.com/heifetz/favicon.ico"/></div><div class="right"><p class="text">howManyBits</p><p class="url">https://zhuanlan.zhihu.com/p/559005736</p></div></a></div><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">howManyBits</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="type">int</span> b16, b8, b4, b2, b1, b0;</span><br><span class="line">  <span class="type">int</span> flag = x &gt;&gt; <span class="number">31</span>;</span><br><span class="line">  x = (flag &amp; ~x) | (~flag &amp; x);  <span class="comment">// x符号位为0不变 ,x符号位为1按位取反</span></span><br><span class="line">  b16 = !!(x &gt;&gt; <span class="number">16</span>) &lt;&lt; <span class="number">4</span>; </span><br><span class="line">  x &gt;&gt;= b16;  </span><br><span class="line">  b8 = !!(x &gt;&gt; <span class="number">8</span>) &lt;&lt; <span class="number">3</span>;</span><br><span class="line">  x &gt;&gt;= b8;</span><br><span class="line">  b4 = !!(x &gt;&gt; <span class="number">4</span>) &lt;&lt; <span class="number">2</span>;</span><br><span class="line">  x &gt;&gt;= b4;</span><br><span class="line">  b2 = !!(x &gt;&gt; <span class="number">2</span>) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">  x &gt;&gt;= b2;</span><br><span class="line">  b1 = !!(x &gt;&gt; <span class="number">1</span>);</span><br><span class="line">  x &gt;&gt;= b1;</span><br><span class="line">  b0 = x;</span><br><span class="line">  <span class="keyword">return</span> b0 + b1 + b2 + b4 + b8 + b16 + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="floatScale2"><a href="#floatScale2" class="headerlink" title="floatScale2"></a>floatScale2</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * floatScale2 - Return bit-level equivalent of expression 2*f for</span></span><br><span class="line"><span class="comment"> *   floating point argument f.</span></span><br><span class="line"><span class="comment"> *   Both the argument and result are passed as unsigned int&#x27;s, but</span></span><br><span class="line"><span class="comment"> *   they are to be interpreted as the bit-level representation of</span></span><br><span class="line"><span class="comment"> *   single-precision floating point values.</span></span><br><span class="line"><span class="comment"> *   When argument is NaN, return argument</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 30</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="title function_">floatScale2</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li><p>将一个单精度浮点数（float）乘以 2，并返回结果的二进制表示。函数的输入和输出都是 unsigned int 类型，但它们实际上表示的是单精度浮点数的二进制位模式，当输入是NaN时返回这个输入即可，另外，终于可以用if while了😭😭😭</p></li><li><p>先回顾下<strong>IEEE 754</strong>浮点数的知识：</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/Snipaste_2025-03-11_15-53-54.png" alt="IEEE 754的表示形式"></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/Snipaste_2025-03-11_15-54-47.png" alt="单精度float 双精度double"></p><p>对于IEEE 754表示的浮点数，一共有三种类别<br><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/Snipaste_2025-03-11_15-55-12.png" alt="类别1：规格化数"></p><p>非规格化数用于表示接近零的极小数值，防止浮点下溢（Underflow），保证浮点运算的连续性。<br><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/Snipaste_2025-03-11_15-55-34.png" alt="类别2：非规格化数"></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/Snipaste_2025-03-11_15-55-43.png" alt="类别3：特殊值"></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/Snipaste_2025-03-11_16-38-57.png" alt="IEEE 754 表示范围"></p><p>首先我们先提取符号位sign，尾数frac，阶码exp：<br><p class='p center logo small'>sign=uf>>31&0x1</p><br><p class='p center logo small'>frac=uf&0x7FFFFF</p><br><p class='p center logo small'>exp = (uf&0x7f800000)>>23</p></p><p>根据阶码判断这个浮点数是规格化数，非规格化数还是特殊情况中的哪一种<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="title function_">floatScale2</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123; </span><br><span class="line">  <span class="type">unsigned</span> <span class="built_in">exp</span> = (uf&amp;<span class="number">0x7f800000</span>)&gt;&gt;<span class="number">23</span>;</span><br><span class="line">  <span class="type">unsigned</span> sign=uf&gt;&gt;<span class="number">31</span>&amp;<span class="number">0x1</span>;</span><br><span class="line">  <span class="type">unsigned</span> frac=uf&amp;<span class="number">0x7FFFFF</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">exp</span> == <span class="number">0</span>)&#123;<span class="comment">//非规格化数，阶码为0，直接让frac乘以2即可</span></span><br><span class="line">    frac &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (sign &lt;&lt; <span class="number">31</span>) | (<span class="built_in">exp</span> &lt;&lt; <span class="number">23</span>) | frac;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">exp</span>==<span class="number">0xFF</span>)&#123;<span class="comment">//特殊情况，非数</span></span><br><span class="line">    <span class="keyword">return</span> uf;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">exp</span>++;<span class="comment">//乘2,相当于E+1,相当于</span></span><br><span class="line">    <span class="keyword">return</span> (sign &lt;&lt; <span class="number">31</span>) | (<span class="built_in">exp</span> &lt;&lt; <span class="number">23</span>) | frac;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="floatFloat2Int"><a href="#floatFloat2Int" class="headerlink" title="floatFloat2Int"></a>floatFloat2Int</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * floatFloat2Int - Return bit-level equivalent of expression (int) f</span></span><br><span class="line"><span class="comment"> *   for floating point argument f.</span></span><br><span class="line"><span class="comment"> *   Argument is passed as unsigned int, but</span></span><br><span class="line"><span class="comment"> *   it is to be interpreted as the bit-level representation of a</span></span><br><span class="line"><span class="comment"> *   single-precision floating point value.</span></span><br><span class="line"><span class="comment"> *   Anything out of range (including NaN and infinity) should return</span></span><br><span class="line"><span class="comment"> *   0x80000000u.</span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. also if, while</span></span><br><span class="line"><span class="comment"> *   Max ops: 30</span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">floatFloat2Int</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>用int表示输入的IEEE 754浮点数，如果超过表示范围则返回0x80000000u。</li><li>如果是非规格化数，直接返回0，如果是特殊情况直接返回0x80000000u</li><li>如果是规格化数，我们需要先判断是否超出int表示范围，int一共32位，一位表示符号位，最大表示2^31，最小表示-(2^31+1)，因此阶码E不能超过30（当E为31时左移E位会覆盖符号位）；当阶码E小于0时，说明是个小于1的数，直接返回0；又：</li><li>sign <strong>1位</strong></li><li>exp <strong>8位</strong></li><li>frac <strong>23位</strong></li></ul><script type="math/tex; mode=display">V = (-1)^{sign} \times 2^{exp - 127} \times (1 + frac)</script><p>我们可以可以看成<strong>1frac</strong>（第24位为1，第1~23位构成frac）而此时相当于由<strong>1.frac</strong>（整数部分位1，小数部分为frac）左移了23位，此时阶码为E，即要乘以E个2，也就是左移E位，所以，当E小于23时，应该右移（23-E）位以截断frac后面的(23-E)位；当E大于23时，由于此时相当于已经左移了23位，所以只需再左移(E-23)位。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">floatFloat2Int</span><span class="params">(<span class="type">unsigned</span> uf)</span> &#123;</span><br><span class="line"> <span class="type">unsigned</span> <span class="built_in">exp</span> = (uf &amp; <span class="number">0x7f800000</span>) &gt;&gt; <span class="number">23</span>;</span><br><span class="line">  <span class="type">unsigned</span> sign = uf &gt;&gt; <span class="number">31</span> &amp; <span class="number">0x1</span>;</span><br><span class="line">  <span class="type">unsigned</span> frac = uf &amp; <span class="number">0x7FFFFF</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">exp</span> == <span class="number">0xFF</span>) &#123;  <span class="comment">// 特殊情况</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0x80000000u</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">exp</span> == <span class="number">0</span>) &#123;  <span class="comment">// 非规格化数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0x0</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;                   <span class="comment">// 规格化数</span></span><br><span class="line">    <span class="type">int</span> E = <span class="built_in">exp</span> - <span class="number">127</span>;  <span class="comment">// 阶码，注意不要设置为unsigned</span></span><br><span class="line">    <span class="keyword">if</span> (E &gt;= <span class="number">31</span>) &#123;           <span class="comment">// 超范围</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0x80000000u</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(E&lt;<span class="number">0</span>)&#123;<span class="comment">//如果E&lt;0说明是个比1小的数，返回0</span></span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    frac = frac | (<span class="number">1</span> &lt;&lt; <span class="number">23</span>);  <span class="comment">// 填上frac的1</span></span><br><span class="line">    <span class="keyword">if</span> (E &lt; <span class="number">23</span>) &#123;</span><br><span class="line">      frac = frac &gt;&gt; (<span class="number">23</span> - E);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      frac = frac &lt;&lt; (E - <span class="number">23</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sign == <span class="number">0</span>) &#123;<span class="comment">//根据符号位返回正负</span></span><br><span class="line">      <span class="keyword">return</span> frac;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> -frac;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="floatPower2"><a href="#floatPower2" class="headerlink" title="floatPower2"></a>floatPower2</h2><p>题目：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> * floatPower2 - Return bit-level equivalent of the expression 2.0^x</span></span><br><span class="line"><span class="comment"> *   (2.0 raised to the power x) for any 32-bit integer x.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   The unsigned value that is returned should have the identical bit</span></span><br><span class="line"><span class="comment"> *   representation as the single-precision floating-point number 2.0^x.</span></span><br><span class="line"><span class="comment"> *   If the result is too small to be represented as a denorm, return</span></span><br><span class="line"><span class="comment"> *   0. If too large, return +INF.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *   Legal ops: Any integer/unsigned operations incl. ||, &amp;&amp;. Also if, while </span></span><br><span class="line"><span class="comment"> *   Max ops: 30 </span></span><br><span class="line"><span class="comment"> *   Rating: 4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">unsigned</span> <span class="title function_">floatPower2</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>计算2.0^x，并返回IEEE 754下的unsigned表示，如果结果太小，小到非规格化数都不能表示则返回0，如果结果太大返回+INF，很明显这题主要考察IEEE 754的表示范围。</li></ul><p>对于<strong>float单精度</strong></p><ul><li>符号位sign：1位</li><li>阶码exp: 8位</li><li>尾数frac：23位</li></ul><p><strong>表示范围</strong></p><ul><li><p>规格化数：阶码exp既不全为0，也不全为1，</p><script type="math/tex; mode=display">V = (-1)^S \times 2^E \times M = (-1)^{sign} \times 2^{exp - bias} \times (1 + frac)</script><p>exp范围为1~254,E=Exp-Bias=Exp-127，E的范围为-126&gt;=E&gt;=127;而对于frac，最小值为0，最大值为1-2^(-23),因此，不考虑S的情况下</p><script type="math/tex; mode=display">V_{max} =  (-1)^S \times 2^{127} \times (2-2^{-23}) = (-1)^S \times 2^{127} \times (2-2^{-23})</script><script type="math/tex; mode=display">V_{min} = (-1)^S \times 2^{-126} \times (1+0) = (-1)^S \times 2^{-126}</script></li><li><p>非规格化数：阶码全为0</p><script type="math/tex; mode=display">V = (-1)^S \times 2^E \times M = (-1)^{sign} \times 2^{1-Bias} \times (0 + frac)</script><p>阶码exp全为0,E=1-Bias=1-127=-126，因此：</p><script type="math/tex; mode=display">V = (-1)^{sign} \times 2^{- 126} \times (0 + frac)</script><p>对于frac来说，最小值为0，但能表示的最小非零是2^(-23),0~2^(-23)无法表示,最大值为1-2^(-23)，因此，当frac取0时，值为0，但要计算表示的最小非零时要令frac=2^(-23)，在不考虑S的情况下</p><script type="math/tex; mode=display">V_{max} =  (-1)^S \times 2^{-126} \times (0+1-2^{-23}) = (-1)^S \times 2^{-126} \times (1-2^{-23})</script><script type="math/tex; mode=display">V_{min} = (-1)^S \times 2^{-126} \times (0+2^{-23}) = (-1)^S \times 2^{-149}</script><ul><li>特殊值</li></ul></li></ul><ol><li>+infinity：exp所有位全为1，frac为0，S为0</li><li>-infinity：exp所有位全为1，frac为0，S为1</li><li>NaN：exp所有位全为1，frac不为0</li></ol><p>因此，经上述分析:</p><ul><li>当x&gt;127时返回+NaN</li><li>当-126&lt;=x&lt;=127时为规格化数</li><li>当 -149 &lt;= x &lt; -126时为非规格化数</li><li>当 x &lt; -149时，太小了无法表示返回0<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="title function_">floatPower2</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (x &gt; <span class="number">127</span>) &#123;  <span class="comment">// 返回+infinity,S=0,exp=0xFF,frac=0;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0xFF</span> &lt;&lt; <span class="number">23</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">-126</span> &lt;= x &amp;&amp; x &lt;= <span class="number">127</span>) &#123;  <span class="comment">// 规格化数,exp=E+Bias=E+127</span></span><br><span class="line">    <span class="keyword">return</span> (x + <span class="number">127</span>) &lt;&lt; <span class="number">23</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">-149</span> &lt;= x &amp;&amp; x &lt; <span class="number">-126</span>) &#123;  <span class="comment">// 非规格化数,exp=0,E=1-Bias=-126,2^(-126)*frac</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>&lt;&lt;(<span class="number">23</span>-(-x<span class="number">-126</span>));<span class="comment">//E已经有了2^(-126),当frac为0x1时表示2^(-23),假设输入x为-127,则frac要为2^(-1),即1向左移动22位</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;<span class="comment">//x&lt; -149,太小了返回0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSAPP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EDK2获取Protocol总结</title>
      <link href="/posts/42855/"/>
      <url>/posts/42855/</url>
      
        <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2025-02-25</p></div></div><div class='timeline-item-content'><ol><li>添加了OpenProtocol,HandleProtocol,LocateProtocol,OpenProtocolInfomation,CloseProtocol</li></ol></div></div></div><hr><p>UefiSpec.h 中定义了Protocol相关的接口:<br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>EFI_HANDLE_PROTOCOL HandleProtocol;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_REGISTER_PROTOCOL_NOTIFY RegisterProtocolNotify;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_LOCATE_HANDLE LocateHandle;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_LOCATE_DEVICE_PATH LocateDevicePath;</p>            </div><br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>EFI_OPEN_PROTOCOL OpenProtocol;</p>            </div><br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>EFI_CLOSE_PROTOCOL CloseProtocol;</p>            </div><br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>EFI_OPEN_PROTOCOL_INFORMATION OpenProtocolInformation;</p>            </div><br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>EFI_PROTOCOLS_PER_HANDLE ProtocolsPerHandle;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_LOCATE_HANDLE_BUFFER LocateHandleBuffer;</p>            </div><br><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>EFI_LOCATE_PROTOCOL LocateProtocol;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_INSTALL_PROTOCOL_INTERFACE InstallProtocolInterface;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_REINSTALL_PROTOCOL_INTERFACE ReinstallProtocolInterface;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_UNINSTALL_PROTOCOL_INTERFACE UninstallProtocolInterface;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_INSTALL_MULTIPLE_PROTOCOL_INTERFACES InstallMultipleProtocolInterfaces;</p>            </div><br><div class='checkbox cyan'><input type="checkbox" />            <p>EFI_UNINSTALL_MULTIPLE_PROTOCOL_INTERFACES UninstallMultipleProtocolInterfaces;</p>            </div></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// EFI Boot Services Table.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// The table header for the EFI Boot Services Table.</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  EFI_TABLE_HEADER                              Hdr;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Task Priority Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_RAISE_TPL                                 RaiseTPL;</span><br><span class="line">  EFI_RESTORE_TPL                               RestoreTPL;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Memory Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_ALLOCATE_PAGES                            AllocatePages;</span><br><span class="line">  EFI_FREE_PAGES                                FreePages;</span><br><span class="line">  EFI_GET_MEMORY_MAP                            GetMemoryMap;</span><br><span class="line">  EFI_ALLOCATE_POOL                             AllocatePool;</span><br><span class="line">  EFI_FREE_POOL                                 FreePool;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Event &amp; Timer Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_CREATE_EVENT                              CreateEvent;</span><br><span class="line">  EFI_SET_TIMER                                 SetTimer;</span><br><span class="line">  EFI_WAIT_FOR_EVENT                            WaitForEvent;</span><br><span class="line">  EFI_SIGNAL_EVENT                              SignalEvent;</span><br><span class="line">  EFI_CLOSE_EVENT                               CloseEvent;</span><br><span class="line">  EFI_CHECK_EVENT                               CheckEvent;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Protocol Handler Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_INSTALL_PROTOCOL_INTERFACE                InstallProtocolInterface;</span><br><span class="line">  EFI_REINSTALL_PROTOCOL_INTERFACE              ReinstallProtocolInterface;</span><br><span class="line">  EFI_UNINSTALL_PROTOCOL_INTERFACE              UninstallProtocolInterface;</span><br><span class="line">  EFI_HANDLE_PROTOCOL                           HandleProtocol;</span><br><span class="line">  VOID                                          *Reserved;</span><br><span class="line">  EFI_REGISTER_PROTOCOL_NOTIFY                  RegisterProtocolNotify;</span><br><span class="line">  EFI_LOCATE_HANDLE                             LocateHandle;</span><br><span class="line">  EFI_LOCATE_DEVICE_PATH                        LocateDevicePath;</span><br><span class="line">  EFI_INSTALL_CONFIGURATION_TABLE               InstallConfigurationTable;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Image Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_IMAGE_LOAD                                LoadImage;</span><br><span class="line">  EFI_IMAGE_START                               StartImage;</span><br><span class="line">  EFI_EXIT                                      Exit;</span><br><span class="line">  EFI_IMAGE_UNLOAD                              UnloadImage;</span><br><span class="line">  EFI_EXIT_BOOT_SERVICES                        ExitBootServices;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Miscellaneous Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_GET_NEXT_MONOTONIC_COUNT                  GetNextMonotonicCount;</span><br><span class="line">  EFI_STALL                                     Stall;</span><br><span class="line">  EFI_SET_WATCHDOG_TIMER                        SetWatchdogTimer;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// DriverSupport Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_CONNECT_CONTROLLER                        ConnectController;</span><br><span class="line">  EFI_DISCONNECT_CONTROLLER                     DisconnectController;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Open and Close Protocol Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_OPEN_PROTOCOL                             OpenProtocol;</span><br><span class="line">  EFI_CLOSE_PROTOCOL                            CloseProtocol;</span><br><span class="line">  EFI_OPEN_PROTOCOL_INFORMATION                 OpenProtocolInformation;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Library Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_PROTOCOLS_PER_HANDLE                      ProtocolsPerHandle;</span><br><span class="line">  EFI_LOCATE_HANDLE_BUFFER                      LocateHandleBuffer;</span><br><span class="line">  EFI_LOCATE_PROTOCOL                           LocateProtocol;</span><br><span class="line">  EFI_INSTALL_MULTIPLE_PROTOCOL_INTERFACES      InstallMultipleProtocolInterfaces;</span><br><span class="line">  EFI_UNINSTALL_MULTIPLE_PROTOCOL_INTERFACES    UninstallMultipleProtocolInterfaces;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// 32-bit CRC Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_CALCULATE_CRC32                           CalculateCrc32;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">// Miscellaneous Services</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  EFI_COPY_MEM                                  CopyMem;</span><br><span class="line">  EFI_SET_MEM                                   SetMem;</span><br><span class="line">  EFI_CREATE_EVENT_EX                           CreateEventEx;</span><br><span class="line">&#125; EFI_BOOT_SERVICES;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="OpenProtocol"><a href="#OpenProtocol" class="headerlink" title="OpenProtocol"></a>OpenProtocol</h1><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250207181806644.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250207182821554.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225144030827.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225144054460.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225144113071.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225144141665.png" alt="OpenProtocol"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MdePkg/Include/Uefi/UefiSpec.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL   0x00000001</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EFI_OPEN_PROTOCOL_GET_PROTOCOL         0x00000002</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EFI_OPEN_PROTOCOL_TEST_PROTOCOL        0x00000004</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EFI_OPEN_PROTOCOL_BY_CHILD_CONTROLLER  0x00000008</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EFI_OPEN_PROTOCOL_BY_DRIVER            0x00000010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EFI_OPEN_PROTOCOL_EXCLUSIVE            0x00000020</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  Queries a handle to determine if it supports a specified protocol. If the protocol is supported by the</span></span><br><span class="line"><span class="comment">  handle, it opens the protocol on behalf of the calling agent.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @param[in]   Handle           The handle for the protocol interface that is being opened.</span></span><br><span class="line"><span class="comment">  @param[in]   Protocol         The published unique identifier of the protocol.</span></span><br><span class="line"><span class="comment">  @param[out]  Interface        Supplies the address where a pointer to the corresponding Protocol</span></span><br><span class="line"><span class="comment">                                Interface is returned.</span></span><br><span class="line"><span class="comment">  @param[in]   AgentHandle      The handle of the agent that is opening the protocol interface</span></span><br><span class="line"><span class="comment">                                specified by Protocol and Interface.</span></span><br><span class="line"><span class="comment">  @param[in]   ControllerHandle If the agent that is opening a protocol is a driver that follows the</span></span><br><span class="line"><span class="comment">                                UEFI Driver Model, then this parameter is the controller handle</span></span><br><span class="line"><span class="comment">                                that requires the protocol interface. If the agent does not follow</span></span><br><span class="line"><span class="comment">                                the UEFI Driver Model, then this parameter is optional and may</span></span><br><span class="line"><span class="comment">                                be NULL.</span></span><br><span class="line"><span class="comment">  @param[in]   Attributes       The open mode of the protocol </span></span><br><span class="line"><span class="comment">  interface specified by Handle</span></span><br><span class="line"><span class="comment">                                and Protocol.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @retval EFI_SUCCESS           An item was added to the open list for the protocol interface, and the</span></span><br><span class="line"><span class="comment">                                protocol interface was returned in Interface.</span></span><br><span class="line"><span class="comment">  @retval EFI_UNSUPPORTED       Handle does not support Protocol.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER One or more parameters are invalid.</span></span><br><span class="line"><span class="comment">  @retval EFI_ACCESS_DENIED     Required attributes can&#x27;t be supported in current environment.</span></span><br><span class="line"><span class="comment">  @retval EFI_ALREADY_STARTED   Item on the open list already has requierd attributes whose agent</span></span><br><span class="line"><span class="comment">                                handle is the same as AgentHandle.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span></span><br><span class="line"><span class="title function_">EFI_STATUS</span></span><br><span class="line"><span class="params">(EFIAPI *EFI_OPEN_PROTOCOL)</span><span class="params">(</span></span><br><span class="line"><span class="params">  IN  EFI_HANDLE                Handle,</span></span><br><span class="line"><span class="params">  IN  EFI_GUID                  *Protocol,</span></span><br><span class="line"><span class="params">  OUT VOID                      **Interface  OPTIONAL,</span></span><br><span class="line"><span class="params">  IN  EFI_HANDLE                AgentHandle,</span></span><br><span class="line"><span class="params">  IN  EFI_HANDLE                ControllerHandle,</span></span><br><span class="line"><span class="params">  IN  UINT32                    Attributes</span></span><br><span class="line"><span class="params">  )</span>;</span><br></pre></td></tr></table></figure><p>示例:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Guid/FileInfo.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/BaseMemoryLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/CacheMaintenanceLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/MemoryAllocationLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiBootServicesTableLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Protocol/SimpleFileSystem.h&gt;</span>  </span></span><br><span class="line"></span><br><span class="line">EFI_STATUS</span><br><span class="line"><span class="title function_">ReadFileByName</span><span class="params">(IN CHAR16 *FileName, OUT UINT8 **FileData, OUT UINTN *FileSize)</span> &#123;</span><br><span class="line">  EFI_FILE_INFO *FileInfo;</span><br><span class="line">  UINTN FileInfoSize;</span><br><span class="line">  EFI_FILE_PROTOCOL *FileHandle = <span class="literal">NULL</span>;</span><br><span class="line">  EFI_SIMPLE_FILE_SYSTEM_PROTOCOL *SimpleFileSystem;</span><br><span class="line">  EFI_FILE_PROTOCOL *Root;</span><br><span class="line">  EFI_STATUS Status;</span><br><span class="line">  UINTN HandleCount = <span class="number">0</span>;</span><br><span class="line">  UINTN HandleIndex = <span class="number">0</span>;</span><br><span class="line">  EFI_HANDLE *HandleBuffer = <span class="literal">NULL</span>;</span><br><span class="line">  <span class="comment">// find all handles of SimpleFileSystemProtocol</span></span><br><span class="line">  Status =</span><br><span class="line">      gBS-&gt;LocateHandleBuffer(ByProtocol, &amp;gEfiSimpleFileSystemProtocolGuid,</span><br><span class="line">                              <span class="literal">NULL</span>, &amp;HandleCount, &amp;HandleBuffer);</span><br><span class="line">  <span class="keyword">if</span> (EFI_ERROR(Status) || HandleCount == <span class="number">0</span>) &#123;</span><br><span class="line">    Print(<span class="string">L&quot;Locate SimpleFileSystemProtocolHandle Buffer error&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> Status;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (HandleIndex = <span class="number">0</span>; HandleIndex &lt; HandleCount; HandleIndex++) &#123;</span><br><span class="line">    Status = gBS-&gt;OpenProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                               &amp;gEfiSimpleFileSystemProtocolGuid,</span><br><span class="line">                               (VOID **)&amp;SimpleFileSystem, gImageHandle, <span class="literal">NULL</span>,</span><br><span class="line">                               EFI_OPEN_PROTOCOL_BY_HANDLE_PROTOCOL);</span><br><span class="line">    <span class="keyword">if</span> (EFI_ERROR(Status)) &#123;</span><br><span class="line">      Print(<span class="string">L&quot;Open SimpleFileSystemProtocol error,at HandleIndex %d&quot;</span>,</span><br><span class="line">            HandleIndex);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Status = SimpleFileSystem-&gt;OpenVolume(SimpleFileSystem, &amp;Root);</span><br><span class="line">    <span class="keyword">if</span> (EFI_ERROR(Status)) &#123;</span><br><span class="line">      Print(<span class="string">L&quot;Open Root Volume error at HandleIndex%d&quot;</span>, HandleIndex);</span><br><span class="line">      gBS-&gt;CloseProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                         &amp;gEfiSimpleFileSystemProtocolGuid, gImageHandle, <span class="literal">NULL</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1.打开文件，获取文件句柄FileHandle</span></span><br><span class="line">    Status = Root-&gt;Open(Root, &amp;FileHandle, FileName, EFI_FILE_MODE_READ, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> ((FileHandle == <span class="literal">NULL</span>) || (EFI_ERROR(Status))) &#123;</span><br><span class="line">      Print(<span class="string">L&quot;Open file %s failed at HandleIndex%d\n&quot;</span>, FileName, HandleIndex);</span><br><span class="line">      Root-&gt;Close(Root);</span><br><span class="line">      gBS-&gt;CloseProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                         &amp;gEfiSimpleFileSystemProtocolGuid, gImageHandle, <span class="literal">NULL</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// else find the target handle</span></span><br><span class="line">    Print(<span class="string">L&quot;FileHandle: 0x%p at HandleIndex%d\n&quot;</span>, FileHandle, HandleIndex);</span><br><span class="line">    <span class="comment">// 2.分配文件信息大小</span></span><br><span class="line">    FileInfoSize = <span class="keyword">sizeof</span>(EFI_FILE_INFO) + <span class="number">1024</span>;</span><br><span class="line">    FileInfo = AllocateZeroPool(FileInfoSize);</span><br><span class="line">    <span class="keyword">if</span> (FileInfo == <span class="literal">NULL</span>) &#123;</span><br><span class="line">      Print(<span class="string">L&quot;can not allocate %d size for FineInfo at HandleIndex%d\n&quot;</span>,</span><br><span class="line">            FileInfoSize, HandleIndex);</span><br><span class="line">      FileHandle-&gt;Close(FileHandle);</span><br><span class="line">      Root-&gt;Close(Root);</span><br><span class="line">      gBS-&gt;CloseProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                         &amp;gEfiSimpleFileSystemProtocolGuid, gImageHandle, <span class="literal">NULL</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 3.打开文件信息</span></span><br><span class="line">    Status = FileHandle-&gt;GetInfo(FileHandle, &amp;gEfiFileInfoGuid, &amp;FileInfoSize,</span><br><span class="line">                                 FileInfo);</span><br><span class="line">    <span class="keyword">if</span> (EFI_ERROR(Status)) &#123;</span><br><span class="line">      Print(<span class="string">L&quot;Get FileInfo failed at HandleIndex%d\n&quot;</span>, HandleIndex);</span><br><span class="line">      FileHandle-&gt;Close(FileHandle);</span><br><span class="line">      Root-&gt;Close(Root);</span><br><span class="line">      gBS-&gt;CloseProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                         &amp;gEfiSimpleFileSystemProtocolGuid, gImageHandle, <span class="literal">NULL</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Print(<span class="string">L&quot;FileInfo: 0x%p\n&quot;</span>, FileInfo);</span><br><span class="line">    <span class="comment">// 4.预先分配文件大小</span></span><br><span class="line">    *FileSize = (UINTN)FileInfo-&gt;FileSize + <span class="keyword">sizeof</span>(CHAR16);</span><br><span class="line">    *FileData = AllocateZeroPool(*FileSize);</span><br><span class="line">    <span class="keyword">if</span> (*FileData == <span class="literal">NULL</span>) &#123;</span><br><span class="line">      Print(<span class="string">L&quot;locate file data size %d failed at HandleIndex%d\n&quot;</span>, *FileSize,</span><br><span class="line">            HandleIndex);</span><br><span class="line">      FileHandle-&gt;Close(FileHandle);</span><br><span class="line">      gBS-&gt;FreePool(FileInfo);  <span class="comment">// 释放FileInfo</span></span><br><span class="line">      Root-&gt;Close(Root);</span><br><span class="line">      gBS-&gt;CloseProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                         &amp;gEfiSimpleFileSystemProtocolGuid, gImageHandle, <span class="literal">NULL</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Print(<span class="string">L&quot;size of %s is %d\n&quot;</span>, FileName, *FileSize);</span><br><span class="line">      Print(<span class="string">L&quot;FileData: 0x%p\n&quot;</span>, *FileData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.读取文件</span></span><br><span class="line">    Status = FileHandle-&gt;Read(FileHandle, FileSize, (VOID *)*FileData);</span><br><span class="line">    <span class="keyword">if</span> (EFI_ERROR(Status)) &#123;</span><br><span class="line">      Print(<span class="string">L&quot;open %s file failed at HandleIndex%d\n&quot;</span>, FileName, HandleIndex);</span><br><span class="line">      FileHandle-&gt;Close(FileHandle);</span><br><span class="line">      gBS-&gt;FreePool(FileInfo);  <span class="comment">// 释放FileInfo</span></span><br><span class="line">      Root-&gt;Close(Root);</span><br><span class="line">      gBS-&gt;CloseProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                         &amp;gEfiSimpleFileSystemProtocolGuid, gImageHandle, <span class="literal">NULL</span>);</span><br><span class="line">      <span class="comment">// gBS-&gt;FreePool((VOID *)FileData);</span></span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Print(<span class="string">L&quot;open %s file success at HandleIndex%d\n&quot;</span>, FileName, HandleIndex);</span><br><span class="line">    &#125;</span><br><span class="line">    FileHandle-&gt;Close(FileHandle);</span><br><span class="line">    Print(<span class="string">L&quot;FileHandle is freed normally at HandleIndex%d\n&quot;</span>, HandleIndex);</span><br><span class="line">    gBS-&gt;FreePool(FileInfo);  <span class="comment">// 释放FileInfo</span></span><br><span class="line">    Print(<span class="string">L&quot;FileInfo is freed normally at HandleIndex%d\n&quot;</span>, HandleIndex);</span><br><span class="line">    Root-&gt;Close(Root);</span><br><span class="line">    gBS-&gt;CloseProtocol(HandleBuffer[HandleIndex],</span><br><span class="line">                       &amp;gEfiSimpleFileSystemProtocolGuid, gImageHandle, <span class="literal">NULL</span>);</span><br><span class="line">    Print(<span class="string">L&quot;Operation Success at HandleIndex%d\n&quot;</span>, HandleIndex);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (HandleBuffer != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    gBS-&gt;FreePool(HandleBuffer);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="HandleProtocol"><a href="#HandleProtocol" class="headerlink" title="HandleProtocol"></a>HandleProtocol</h1><p>UEFI_Spec_2.8</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250201214538747.png" alt="HandleProtocol的原型"></p><p>相比于OpenProtocol，不需要指定参数AgentHandle,ControllerHandle和Attributes</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  Queries a handle to determine if it supports a specified protocol.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @param[in]   Handle           The handle being queried.</span></span><br><span class="line"><span class="comment">  @param[in]   Protocol         The published unique identifier of the protocol.</span></span><br><span class="line"><span class="comment">  @param[out]  Interface        Supplies the address where a pointer to the corresponding Protocol</span></span><br><span class="line"><span class="comment">                                Interface is returned.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @retval EFI_SUCCESS           The interface information for the specified protocol was returned.</span></span><br><span class="line"><span class="comment">  @retval EFI_UNSUPPORTED       The device does not support the specified protocol.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER Handle is NULL.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER Protocol is NULL.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER Interface is NULL.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">typedef</span></span><br><span class="line"><span class="title function_">EFI_STATUS</span></span><br><span class="line"><span class="params">(EFIAPI *EFI_HANDLE_PROTOCOL)</span><span class="params">(</span></span><br><span class="line"><span class="params">  IN  EFI_HANDLE               Handle,</span></span><br><span class="line"><span class="params">  IN  EFI_GUID                 *Protocol,</span></span><br><span class="line"><span class="params">  OUT VOID                     **Interface</span></span><br><span class="line"><span class="params">  )</span>;</span><br></pre></td></tr></table></figure><p>例子：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/DevicePathLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiBootServicesTableLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Protocol/LoadedImage.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Uefi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">EFI_STATUS EFIAPI <span class="title function_">UefiMain</span><span class="params">(IN EFI_HANDLE ImageHandle,</span></span><br><span class="line"><span class="params">                           IN EFI_SYSTEM_TABLE *SystemTable)</span> &#123;</span><br><span class="line">  EFI_STATUS Status;</span><br><span class="line">  EFI_LOADED_IMAGE_PROTOCOL *LoadedImage;</span><br><span class="line">  Status = gBS-&gt;HandleProtocol(ImageHandle, &amp;gEfiLoadedImageProtocolGuid,</span><br><span class="line">                               (VOID **)&amp;LoadedImage);</span><br><span class="line">  <span class="keyword">if</span> (Status == EFI_SUCCESS) &#123;</span><br><span class="line">    EFI_DEVICE_PATH_PROTOCOL *DevicePath;</span><br><span class="line">    Status =</span><br><span class="line">        gBS-&gt;HandleProtocol(ImageHandle, &amp;gEfiLoadedImageDevicePathProtocolGuid,</span><br><span class="line">                            (VOID **)&amp;DevicePath);</span><br><span class="line">    <span class="keyword">if</span>(Status == EFI_SUCCESS)&#123;</span><br><span class="line">      Print(<span class="string">L&quot;Image device: %s\n&quot;</span>,ConvertDevicePathToText(DevicePath,FALSE,TRUE));</span><br><span class="line">      Print(<span class="string">L&quot;Image file: %s\n&quot;</span>, ConvertDevicePathToText(LoadedImage-&gt;FilePath,FALSE,TRUE));</span><br><span class="line">      Print(<span class="string">L&quot;Image Base: %X\n&quot;</span>,LoadedImage-&gt;ImageBase);</span><br><span class="line">      Print(<span class="string">L&quot;Image Size: %X\n&quot;</span>,LoadedImage-&gt;ImageSize);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      Print(<span class="string">L&quot;Can&#x27;t get EFI_LOADED_IMAGE_PROTOCOL, Status=%r\n&quot;</span>,Status);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    Print(<span class="string">L&quot;Can&#x27;t get EFI_DEVICE_PATH_PROTOCOL, Status=%r\n&quot;</span>,Status);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> EFI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="ProtocolsPerHandle"><a href="#ProtocolsPerHandle" class="headerlink" title="ProtocolsPerHandle"></a>ProtocolsPerHandle</h1><p>UEFI_Spec_2.8</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250202231208653.png" alt="ProtocolsPerHandle"></p><p>通过Protocol GUID检索安装在设备句柄上的接口<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  Retrieves the list of protocol interface GUIDs that are installed on a handle in a buffer allocated</span></span><br><span class="line"><span class="comment">  from pool.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @param[in]   Handle              The handle from which to retrieve the list of protocol interface</span></span><br><span class="line"><span class="comment">                                   GUIDs.</span></span><br><span class="line"><span class="comment">  @param[out]  ProtocolBuffer      A pointer to the list of protocol interface GUID pointers that are</span></span><br><span class="line"><span class="comment">                                   installed on Handle.</span></span><br><span class="line"><span class="comment">  @param[out]  ProtocolBufferCount A pointer to the number of GUID pointers present in</span></span><br><span class="line"><span class="comment">                                   ProtocolBuffer.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @retval EFI_SUCCESS           The list of protocol interface GUIDs installed on Handle was returned in</span></span><br><span class="line"><span class="comment">                                ProtocolBuffer. The number of protocol interface GUIDs was</span></span><br><span class="line"><span class="comment">                                returned in ProtocolBufferCount.</span></span><br><span class="line"><span class="comment">  @retval EFI_OUT_OF_RESOURCES  There is not enough pool memory to store the results.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER Handle is NULL.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER Handle is not a valid EFI_HANDLE.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER ProtocolBuffer is NULL.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER ProtocolBufferCount is NULL.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">typedef</span></span><br><span class="line"><span class="title function_">EFI_STATUS</span></span><br><span class="line"><span class="params">(EFIAPI *EFI_PROTOCOLS_PER_HANDLE)</span><span class="params">(</span></span><br><span class="line"><span class="params">  IN  EFI_HANDLE      Handle,</span></span><br><span class="line"><span class="params">  OUT EFI_GUID        ***ProtocolBuffer,</span></span><br><span class="line"><span class="params">  OUT UINTN           *ProtocolBufferCount</span></span><br><span class="line"><span class="params">  )</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>例子:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiBootServicesTableLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/MemoryAllocationLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Uefi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">EFI_STATUS</span><br><span class="line">EFIAPI</span><br><span class="line"><span class="title function_">UefiMain</span><span class="params">(IN EFI_HANDLE ImageHandle, IN EFI_SYSTEM_TABLE *SystemTable)</span> &#123;</span><br><span class="line">  Print(<span class="string">L&quot;_______________\n&quot;</span>);</span><br><span class="line">  EFI_GUID **ProtocolGuidArray;</span><br><span class="line">  UINTN ArrayCount;</span><br><span class="line">  EFI_STATUS Status = gBS-&gt;ProtocolsPerHandle(ImageHandle,&amp;ProtocolGuidArray,&amp;ArrayCount);</span><br><span class="line">  <span class="keyword">if</span>(Status==EFI_SUCCESS)&#123;</span><br><span class="line">    <span class="keyword">for</span>(UINTN i =<span class="number">0</span>;i&lt;ArrayCount;i++)&#123;</span><br><span class="line">      Print(<span class="string">L&quot;%g\n&quot;</span>,ProtocolGuidArray[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    FreePool(ProtocolGuidArray);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    Print(<span class="string">L&quot;ProtocolsPerHandle error: %r\n&quot;</span>,Status);<span class="comment">//%r打印EFI_STATUS错误码</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> EFI_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="LocateProtocol"><a href="#LocateProtocol" class="headerlink" title="LocateProtocol"></a>LocateProtocol</h1><p>UEFI_Spec_2.8</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225140716252.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225141031426.png" alt="LocateProtocol"></p><p>与HandleProtocol和OpenProtocol不同，LocateProtocol不关心Protocol在哪个设备上，它会在系统中顺序寻找句柄列表，返回找到的第一个Protocol实例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  Returns the first protocol instance that matches the given protocol.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @param[in]  Protocol          Provides the protocol to search for.</span></span><br><span class="line"><span class="comment">  @param[in]  Registration      Optional registration key returned from</span></span><br><span class="line"><span class="comment">                                RegisterProtocolNotify().</span></span><br><span class="line"><span class="comment">  @param[out]  Interface        On return, a pointer to the first interface that matches Protocol and</span></span><br><span class="line"><span class="comment">                                Registration.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @retval EFI_SUCCESS           A protocol instance matching Protocol was found and returned in</span></span><br><span class="line"><span class="comment">                                Interface.</span></span><br><span class="line"><span class="comment">  @retval EFI_NOT_FOUND         No protocol instances were found that match Protocol and</span></span><br><span class="line"><span class="comment">                                Registration.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER Interface is NULL.</span></span><br><span class="line"><span class="comment">                                Protocol is NULL.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">typedef</span></span><br><span class="line"><span class="title function_">EFI_STATUS</span></span><br><span class="line"><span class="params">(EFIAPI *EFI_LOCATE_PROTOCOL)</span><span class="params">(</span></span><br><span class="line"><span class="params">  IN  EFI_GUID  *Protocol,</span></span><br><span class="line"><span class="params">  IN  VOID      *Registration  OPTIONAL,</span></span><br><span class="line"><span class="params">  OUT VOID      **Interface</span></span><br><span class="line"><span class="params">  )</span>;</span><br></pre></td></tr></table></figure><p>例子:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">EFI_STATUS</span><br><span class="line"><span class="title function_">LoadFileByName</span><span class="params">(</span></span><br><span class="line"><span class="params">IN CHAR16 *FileName,</span></span><br><span class="line"><span class="params">OUT UINT8 **FileData,</span></span><br><span class="line"><span class="params">OUT UINTN *FileSize)</span></span><br><span class="line">&#123;</span><br><span class="line">EFI_STATUS Status;</span><br><span class="line">EFI_SIMPLE_FILE_SYSTEM_PROTOCOL *SimpleFileSystem;</span><br><span class="line">EFI_FILE_PROTOCOL *Root;</span><br><span class="line">EFI_FILE_PROTOCOL *FileHandle = <span class="literal">NULL</span>;</span><br><span class="line">EFI_FILE_INFO *FileInfo;</span><br><span class="line">UINTN FileInfoSize;</span><br><span class="line">UINTN TempBufferSize;</span><br><span class="line">VOID *TempBuffer;</span><br><span class="line"></span><br><span class="line">Status = gBS-&gt;LocateProtocol(&amp;gEfiSimpleFileSystemProtocolGuid,</span><br><span class="line"> <span class="literal">NULL</span>, (VOID **)&amp;SimpleFileSystem);</span><br><span class="line"><span class="keyword">if</span> (EFI_ERROR(Status))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Open the root directory</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Status = SimpleFileSystem-&gt;OpenVolume(SimpleFileSystem, &amp;Root);</span><br><span class="line"><span class="keyword">if</span> (EFI_ERROR(Status))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Open the file</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Status = Root-&gt;Open(Root, &amp;FileHandle, FileName,</span><br><span class="line">EFI_FILE_MODE_READ, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ((FileHandle == <span class="literal">NULL</span>) || (EFI_ERROR(Status)))</span><br><span class="line">&#123;</span><br><span class="line">Print(<span class="string">L&quot;Open file %s failed !!\n&quot;</span>, FileName);</span><br><span class="line">Root-&gt;Close(Root);</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Get the file information</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">FileInfoSize = <span class="keyword">sizeof</span>(EFI_FILE_INFO) + <span class="number">1024</span>;</span><br><span class="line">FileInfo = AllocateZeroPool(FileInfoSize);</span><br><span class="line"><span class="keyword">if</span> (FileInfo == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">FileHandle-&gt;Close(FileHandle);</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Status = FileHandle-&gt;GetInfo(FileHandle, &amp;gEfiFileInfoGuid,</span><br><span class="line"> &amp;FileInfoSize,</span><br><span class="line"> FileInfo);</span><br><span class="line"><span class="keyword">if</span> (EFI_ERROR(Status))</span><br><span class="line">&#123;</span><br><span class="line">FileHandle-&gt;Close(FileHandle);</span><br><span class="line">gBS-&gt;FreePool(FileInfo);</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Allocate buffer for the file data. The last CHAR16 is for L&#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">TempBufferSize = (UINTN)FileInfo-&gt;FileSize + <span class="keyword">sizeof</span>(CHAR16);</span><br><span class="line">TempBuffer = AllocateZeroPool(TempBufferSize);</span><br><span class="line"><span class="keyword">if</span> (TempBuffer == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">FileHandle-&gt;Close(FileHandle);</span><br><span class="line">gBS-&gt;FreePool(FileInfo);</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gBS-&gt;FreePool(FileInfo);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Read the file data to the buffer</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Status = FileHandle-&gt;Read(FileHandle, &amp;TempBufferSize, TempBuffer);</span><br><span class="line"><span class="keyword">if</span> (EFI_ERROR(Status))</span><br><span class="line">&#123;</span><br><span class="line">FileHandle-&gt;Close(FileHandle);</span><br><span class="line">gBS-&gt;FreePool(TempBuffer);</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FileHandle-&gt;Close(FileHandle);</span><br><span class="line"></span><br><span class="line">*FileSize = TempBufferSize;</span><br><span class="line">*FileData = TempBuffer;</span><br><span class="line"><span class="keyword">return</span> Status;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="OpenProtocolInformation"><a href="#OpenProtocolInformation" class="headerlink" title="OpenProtocolInformation"></a>OpenProtocolInformation</h1><p>UEFI_Spec_2.8</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225141817128.png" alt="OpenProtocolInformation"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// EFI Oprn Protocol Information Entry</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">  EFI_HANDLE    AgentHandle;</span><br><span class="line">  EFI_HANDLE    ControllerHandle;</span><br><span class="line">  UINT32        Attributes;</span><br><span class="line">  UINT32        OpenCount;</span><br><span class="line">&#125; EFI_OPEN_PROTOCOL_INFORMATION_ENTRY;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  Retrieves the list of agents that currently have a protocol interface opened.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @param[in]   Handle           The handle for the protocol interface that is being queried.</span></span><br><span class="line"><span class="comment">  @param[in]   Protocol         The published unique identifier of the protocol.</span></span><br><span class="line"><span class="comment">  @param[out]  EntryBuffer      A pointer to a buffer of open protocol information in the form of</span></span><br><span class="line"><span class="comment">                                EFI_OPEN_PROTOCOL_INFORMATION_ENTRY structures.</span></span><br><span class="line"><span class="comment">  @param[out]  EntryCount       A pointer to the number of entries in EntryBuffer.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @retval EFI_SUCCESS           The open protocol information was returned in EntryBuffer, and the</span></span><br><span class="line"><span class="comment">                                number of entries was returned EntryCount.</span></span><br><span class="line"><span class="comment">  @retval EFI_OUT_OF_RESOURCES  There are not enough resources available to allocate EntryBuffer.</span></span><br><span class="line"><span class="comment">  @retval EFI_NOT_FOUND         Handle does not support the protocol specified by Protocol.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">typedef</span></span><br><span class="line"><span class="title function_">EFI_STATUS</span></span><br><span class="line"><span class="params">(EFIAPI *EFI_OPEN_PROTOCOL_INFORMATION)</span><span class="params">(</span></span><br><span class="line"><span class="params">  IN  EFI_HANDLE                          Handle,</span></span><br><span class="line"><span class="params">  IN  EFI_GUID                            *Protocol,</span></span><br><span class="line"><span class="params">  OUT EFI_OPEN_PROTOCOL_INFORMATION_ENTRY **EntryBuffer,</span></span><br><span class="line"><span class="params">  OUT UINTN                               *EntryCount</span></span><br><span class="line"><span class="params">  )</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例子:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="CloseProtocol"><a href="#CloseProtocol" class="headerlink" title="CloseProtocol"></a>CloseProtocol</h1><p>UEFI_Spec_2.8</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225142227191.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250225142316837.png" alt="CloseProtocol"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  Closes a protocol on a handle that was opened using OpenProtocol().</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @param[in]  Handle            The handle for the protocol interface that was previously opened</span></span><br><span class="line"><span class="comment">                                with OpenProtocol(), and is now being closed.</span></span><br><span class="line"><span class="comment">  @param[in]  Protocol          The published unique identifier of the protocol.</span></span><br><span class="line"><span class="comment">  @param[in]  AgentHandle       The handle of the agent that is closing the protocol interface.</span></span><br><span class="line"><span class="comment">  @param[in]  ControllerHandle  If the agent that opened a protocol is a driver that follows the</span></span><br><span class="line"><span class="comment">                                UEFI Driver Model, then this parameter is the controller handle</span></span><br><span class="line"><span class="comment">                                that required the protocol interface.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  @retval EFI_SUCCESS           The protocol instance was closed.</span></span><br><span class="line"><span class="comment">  @retval EFI_INVALID_PARAMETER 1) Handle is NULL.</span></span><br><span class="line"><span class="comment">                                2) AgentHandle is NULL.</span></span><br><span class="line"><span class="comment">                                3) ControllerHandle is not NULL and ControllerHandle is not a valid EFI_HANDLE.</span></span><br><span class="line"><span class="comment">                                4) Protocol is NULL.</span></span><br><span class="line"><span class="comment">  @retval EFI_NOT_FOUND         1) Handle does not support the protocol specified by Protocol.</span></span><br><span class="line"><span class="comment">                                2) The protocol interface specified by Handle and Protocol is not</span></span><br><span class="line"><span class="comment">                                   currently open by AgentHandle and ControllerHandle.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="keyword">typedef</span></span><br><span class="line"><span class="title function_">EFI_STATUS</span></span><br><span class="line"><span class="params">(EFIAPI *EFI_CLOSE_PROTOCOL)</span><span class="params">(</span></span><br><span class="line"><span class="params">  IN EFI_HANDLE               Handle,</span></span><br><span class="line"><span class="params">  IN EFI_GUID                 *Protocol,</span></span><br><span class="line"><span class="params">  IN EFI_HANDLE               AgentHandle,</span></span><br><span class="line"><span class="params">  IN EFI_HANDLE               ControllerHandle</span></span><br><span class="line"><span class="params">  )</span>;</span><br></pre></td></tr></table></figure><p>例子:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> UEFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UEFI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keil安装</title>
      <link href="/posts/28522/"/>
      <url>/posts/28522/</url>
      
        <content type="html"><![CDATA[<h1 id="C51安装"><a href="#C51安装" class="headerlink" title="C51安装"></a>C51安装</h1><p>  1.首先进入官网点击下载C51</p>   <div class="tag link"><a class="link-card" title="Keil下载" href="https://www.keil.com/download/product/"><div class="left"><img src="https://www.keil.com/images/icons/c51_dld.png"/></div><div class="right"><p class="text">Keil下载</p><p class="url">https://www.keil.com/download/product/</p></div></a></div><p>这里会要求填一个表单，简单填一下就好，然后点击下载的exe安装包进行安装</p><p>  2.进入安装后一路确认，在选择安装位置这里我选择安装到D盘而不是默认的C盘。</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250131193502978.png" alt="C51安装位置"></p><p>  3.最后点击Finish安装成功</p><h1 id="MDK安装"><a href="#MDK安装" class="headerlink" title="MDK安装"></a>MDK安装</h1><p>Keil的MDK和C51这两个软件可以共存，安装步骤类似。</p><p>  1.首先还是访问官网下载MDK的安装包<br>   <div class="tag link"><a class="link-card" title="Keil下载" href="https://www.keil.com/download/product/"><div class="left"><img src="https://www.keil.com/images/icons/mdk_dld_v2.png"/></div><div class="right"><p class="text">Keil下载</p><p class="url">https://www.keil.com/download/product/</p></div></a></div></p><p>  2.进入安装后，安装位置这样填，根据C51的安装位置更改<br>   <img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250131194740287.png" alt="MDK安装位置"></p><p>  3.最后点击Finish安装成功</p><div class="tip warning faa-horizontal animated"><p>注意：C51和MDK的安装顺序不要反了</p></div><h1 id="v5编译器"><a href="#v5编译器" class="headerlink" title="v5编译器"></a>v5编译器</h1><p>首先下载v5编译器，因为现在官方好像不提供直接下载的渠道了，所以只能下载之前版本的Keil提取出v5版本的编译器，这里有已经提取出来的编译器可以直接下载</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">夸克网盘</button><button type="button" class="tab">百度网盘</button></div><div class="tab-contents"><div class="tab-item-content active"><div class="tag link"><a class="link-card" title="v5编译器下载" href="https://pan.quark.cn/s/cd646c8d5b2b"><div class="left"><img src="https://image.quark.cn/s/uae/g/3o/broccoli/resource/202404/d94d93e0-03a2-11ef-be4c-79ebae2e18ac.vnd.microsoft.icon"/></div><div class="right"><p class="text">v5编译器下载</p><p class="url">https://pan.quark.cn/s/cd646c8d5b2b</p></div></a></div></div><div class="tab-item-content"><div class="tag link"><a class="link-card" title="v5编译器下载" href="https://pan.baidu.com/s/1zkUcPyKC5Z-Qda9jJb1Sjw?pwd=1234"><div class="left"><img src="https://nd-static.bdstatic.com/m-static/v20-main/favicon-main.ico"/></div><div class="right"><p class="text">v5编译器下载</p><p class="url">https://pan.baidu.com/s/1zkUcPyKC5Z-Qda9jJb1Sjw?pwd=1234</p></div></a></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>下载后解压到D:\Keil_v5\ARM目录下</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250131200906926.png" alt="编译器解压目录"></p><p>打开Keil，随便新建一个工程，然后点击这个按钮<strong>File Extensions, Books and Environment…</strong></p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250131201214187.png" alt="File Extensions, Books and Environment..."></p><p>然后点击<strong>Folder/Extensions</strong>，点击<strong>Use ARM Compiler</strong>旁边的这个按钮</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250131201435417.png" alt="Use ARM Compiler"></p><p>点击下面的<strong>Add another ARM Compiler Version to List</strong>, 选择刚才解压的ARMCC路径</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/image-20250131201751844.png" alt="Add another ARM Compiler Version to List"></p><p>保存后至此成功</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://zhuanlan.zhihu.com/p/561047339">MDK5.37不预安装Compiler Version5解决办法</a></div>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Embedded tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的Emacs配置</title>
      <link href="/posts/28521/"/>
      <url>/posts/28521/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:ubuntuhandbook1/emacs</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="comment"># emacs-nox 无gui，命令行</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install emacs-nox</span><br><span class="line"><span class="comment"># emacs</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install emacs</span><br><span class="line"><span class="built_in">sudo</span> apt-get install clang clangd clang-format</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h2><p>.emacs<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setq</span> inhibit-startup-message <span class="literal">t</span>)         <span class="comment">;; 关闭启动消息</span></span><br><span class="line">(<span class="name">setq</span> initial-scratch-message <span class="literal">nil</span>)       <span class="comment">;; 关闭 *scratch* 缓冲区中的欢迎信息</span></span><br><span class="line">(<span class="name">tool-bar-mode</span> <span class="number">-1</span>)                       <span class="comment">;; 关闭工具栏</span></span><br><span class="line">(<span class="name">menu-bar-mode</span> <span class="number">-1</span>)                       <span class="comment">;; 关闭菜单栏</span></span><br><span class="line">(<span class="name">scroll-bar-mode</span> <span class="number">-1</span>)                     <span class="comment">;; 关闭滚动条</span></span><br><span class="line">(<span class="name">setq</span> ring-bell-function &#x27;ignore)        <span class="comment">;; 关闭错误提示音</span></span><br><span class="line">(<span class="name">global-display-line-numbers-mode</span> <span class="literal">t</span>)     <span class="comment">;; 显示行号</span></span><br><span class="line">(<span class="name">defalias</span> &#x27;yes-or-no-p &#x27;y-or-n-p)        <span class="comment">;; 使用 y/n 代替 yes/no</span></span><br><span class="line">(<span class="name">setq</span> make-backup-files <span class="literal">nil</span>)             <span class="comment">;; 禁用备份文件</span></span><br><span class="line"><span class="comment">;;(setq auto-save-default nil)             ;; 禁用自动保存文件</span></span><br><span class="line">(<span class="name">setq</span> create-lockfiles <span class="literal">nil</span>)              <span class="comment">;; 禁用锁定文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;; ------------------------</span></span><br><span class="line"><span class="comment">;; 设置编码</span></span><br><span class="line"><span class="comment">;; ------------------------</span></span><br><span class="line"><span class="comment">;; 设定 Emacs 使用 UTF-8 编码</span></span><br><span class="line">(<span class="name">prefer-coding-system</span> &#x27;utf-8)                   <span class="comment">;; 优先使用 UTF-8 编码</span></span><br><span class="line">(<span class="name">setq</span> locale-coding-system &#x27;utf-8)              <span class="comment">;; 设置区域编码为 UTF-8</span></span><br><span class="line">(<span class="name">set-keyboard-coding-system</span> &#x27;utf-8)             <span class="comment">;; 设置键盘编码为 UTF-8</span></span><br><span class="line">(<span class="name">set-selection-coding-system</span> &#x27;utf-8)            <span class="comment">;; 设置选择内容的编码为 UTF-8</span></span><br><span class="line">(<span class="name">set-terminal-coding-system</span> &#x27;utf-8)             <span class="comment">;; 设置终端编码为 UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;; 默认保存文件时使用 UTF-8 编码</span></span><br><span class="line">(<span class="name">setq-default</span> buffer-file-coding-system &#x27;utf-8)</span><br><span class="line"></span><br><span class="line"><span class="comment">;; 自动检测文件编码</span></span><br><span class="line">(<span class="name">setq</span> find-file-encoding &#x27;auto)                  <span class="comment">;; 自动检测文件编码</span></span><br><span class="line">(<span class="name">setq-default</span> coding-system-for-read &#x27;utf-8)     <span class="comment">;; 读取文件时默认使用 UTF-8</span></span><br><span class="line">(<span class="name">setq-default</span> coding-system-for-write &#x27;utf-8)    <span class="comment">;; 写入文件时默认使用 UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;; 设定编码环境为 UTF-8</span></span><br><span class="line">(<span class="name">set-language-environment</span> <span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">;;------------------------------</span></span><br><span class="line"><span class="comment">;; 优化部分</span></span><br><span class="line"><span class="comment">;;------------------------------</span></span><br><span class="line"><span class="comment">;; 将基本缩进改为空格</span></span><br><span class="line">(<span class="name">use-package</span> simple</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">nil</span></span><br><span class="line">  <span class="symbol">:init</span></span><br><span class="line">  (<span class="name">setq-default</span> indent-tabs-mode <span class="literal">nil</span>))</span><br><span class="line"><span class="comment">;;优化长行文件</span></span><br><span class="line">(<span class="name">use-package</span> so-long</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:init</span></span><br><span class="line">  (<span class="name">global-so-long-mode</span> <span class="number">+1</span>))</span><br><span class="line"><span class="comment">;; 提高性能</span></span><br><span class="line">(<span class="name">setq</span> process-adaptive-read-buffering <span class="literal">t</span>)</span><br><span class="line">(<span class="name">setq</span> blink-matching-paren <span class="literal">nil</span>)<span class="comment">;;键入右括号时不要眨眼</span></span><br><span class="line">(<span class="name">setq</span> vc-handled-backends &#x27;(Git))<span class="comment">;;将 VC 后端更改为仅 Git</span></span><br><span class="line">(<span class="name">setq</span> auto-mode-case-fold <span class="literal">nil</span>)<span class="comment">;;防止文件搜索执行两次</span></span><br><span class="line">(<span class="name">setq-default</span> bidi-display-reordering &#x27;left-to-right)<span class="comment">;;抑制双向排序</span></span><br><span class="line">(<span class="name">setq</span> bidi-inhibit-bpa <span class="literal">t</span>)<span class="comment">;;长线双向扫描</span></span><br><span class="line"><span class="comment">;;删除未聚焦窗口中的光标</span></span><br><span class="line">(<span class="name">setq-default</span> cursor-in-non-selected-windows <span class="literal">nil</span>)</span><br><span class="line">(<span class="name">setq</span> highlight-nonselected-windows <span class="literal">nil</span>)<span class="comment">;;</span></span><br><span class="line">(<span class="name">setq</span> fast-but-imprecise-scrolling <span class="literal">t</span>)<span class="comment">;;快速滚动</span></span><br><span class="line">(<span class="name">setq</span> ffap-machine-p-known &#x27;reject)<span class="comment">;;不要 ping 域</span></span><br><span class="line">(<span class="name">setq</span> idle-update-delay <span class="number">1.0</span>)<span class="comment">;;减少UI更新频率</span></span><br><span class="line">(<span class="name">setq</span> redisplay-skip-fontification-on-input <span class="literal">t</span>)<span class="comment">;;抑制不必要的字体显示</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;; package </span></span><br><span class="line">(<span class="name">use-package</span> package</span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;package-archives &#x27;(<span class="string">&quot;melpa&quot;</span> . <span class="string">&quot;https://melpa.org/packages/&quot;</span>))</span><br><span class="line">  (<span class="name">unless</span> (<span class="name">bound-and-true-p</span> package--initialized)</span><br><span class="line">    (<span class="name">package-initialize</span>)))</span><br><span class="line"><span class="comment">;; 设置 use-package 自动安装缺失包</span></span><br><span class="line">(<span class="name">setq</span> use-package-always-ensure <span class="literal">t</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;; Fix path</span></span><br><span class="line">(<span class="name">use-package</span> exec-path-from-shell</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">when</span> (<span class="name">memq</span> window-system &#x27;(mac ns x))</span><br><span class="line">    (<span class="name">exec-path-from-shell-initialize</span>)))</span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> tree-sitter</span><br><span class="line">  <span class="symbol">:when</span> (<span class="name">and</span> (<span class="name">fboundp</span> &#x27;treesit-available-p)</span><br><span class="line">         (<span class="name">treesit-available-p</span>))</span><br><span class="line">  <span class="symbol">:config</span> (<span class="name">setq</span> treesit-font-lock-level <span class="number">4</span>)</span><br><span class="line">  <span class="symbol">:init</span></span><br><span class="line">  (<span class="name">setq</span> treesit-language-source-alist</span><br><span class="line">    &#x27;((bash       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-bash&quot;</span>))</span><br><span class="line">      (c          . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-c&quot;</span>))</span><br><span class="line">      (cpp        . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-cpp&quot;</span>))</span><br><span class="line">      (css        . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-css&quot;</span>))</span><br><span class="line">      (cmake      . (<span class="string">&quot;https://github.com/uyha/tree-sitter-cmake&quot;</span>))</span><br><span class="line">      (csharp     . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-c-sharp.git&quot;</span>))</span><br><span class="line">      (dockerfile . (<span class="string">&quot;https://github.com/camdencheek/tree-sitter-dockerfile&quot;</span>))</span><br><span class="line">      (elisp      . (<span class="string">&quot;https://github.com/Wilfred/tree-sitter-elisp&quot;</span>))</span><br><span class="line">      (go         . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-go&quot;</span>))</span><br><span class="line">      (gomod      . (<span class="string">&quot;https://github.com/camdencheek/tree-sitter-go-mod.git&quot;</span>))</span><br><span class="line">      (html       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-html&quot;</span>))</span><br><span class="line">      (java       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-java.git&quot;</span>))</span><br><span class="line">      (javascript . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-javascript&quot;</span>))</span><br><span class="line">      (json       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-json&quot;</span>))</span><br><span class="line">      (lua        . (<span class="string">&quot;https://github.com/Azganoth/tree-sitter-lua&quot;</span>))</span><br><span class="line">      (make       . (<span class="string">&quot;https://github.com/alemuller/tree-sitter-make&quot;</span>))</span><br><span class="line">      (markdown   . (<span class="string">&quot;https://github.com/MDeiml/tree-sitter-markdown&quot;</span> <span class="literal">nil</span> <span class="string">&quot;tree-sitter-markdown/src&quot;</span>))</span><br><span class="line">      (ocaml      . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-ocaml&quot;</span> <span class="literal">nil</span> <span class="string">&quot;ocaml/src&quot;</span>))</span><br><span class="line">      (org        . (<span class="string">&quot;https://github.com/milisims/tree-sitter-org&quot;</span>))</span><br><span class="line">      (python     . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-python&quot;</span>))</span><br><span class="line">      (php        . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-php&quot;</span>))</span><br><span class="line">      (typescript . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-typescript&quot;</span> <span class="literal">nil</span> <span class="string">&quot;typescript/src&quot;</span>))</span><br><span class="line">      (tsx        . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-typescript&quot;</span> <span class="literal">nil</span> <span class="string">&quot;tsx/src&quot;</span>))</span><br><span class="line">      (ruby       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-ruby&quot;</span>))</span><br><span class="line">      (rust       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-rust&quot;</span>))</span><br><span class="line">      (sql        . (<span class="string">&quot;https://github.com/m-novikov/tree-sitter-sql&quot;</span>))</span><br><span class="line">      (vue        . (<span class="string">&quot;https://github.com/merico-dev/tree-sitter-vue&quot;</span>))</span><br><span class="line">      (yaml       . (<span class="string">&quot;https://github.com/ikatyang/tree-sitter-yaml&quot;</span>))</span><br><span class="line">      (toml       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-toml&quot;</span>))</span><br><span class="line">      (zig        . (<span class="string">&quot;https://github.com/GrayJack/tree-sitter-zig&quot;</span>))))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(sh-mode         . bash-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(c-mode          . c-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(c++-mode        . c++-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(c-or-c++-mode   . c-or-c++-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(css-mode        . css-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(js-mode         . js-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(java-mode       . java-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(js-json-mode    . json-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(makefile-mode   . cmake-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(python-mode     . python-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(ruby-mode       . ruby-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;major-mode-remap-alist &#x27;(conf-toml-mode  . toml-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;auto-mode-alist &#x27;(<span class="string">&quot;\\(?:Dockerfile\\(?:\\..*\\)?\\|\\.[Dd]ockerfile\\)\\&#x27;&quot;</span> . dockerfile-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;auto-mode-alist &#x27;(<span class="string">&quot;\\.go\\&#x27;&quot;</span> . go-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;auto-mode-alist &#x27;(<span class="string">&quot;/go\\.mod\\&#x27;&quot;</span> . go-mod-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;auto-mode-alist &#x27;(<span class="string">&quot;\\.rs\\&#x27;&quot;</span> . rust-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;auto-mode-alist &#x27;(<span class="string">&quot;\\.ts\\&#x27;&quot;</span> . typescript-ts-mode))</span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;auto-mode-alist &#x27;(<span class="string">&quot;\\.y[a]?ml\\&#x27;&quot;</span> . yaml-ts-mode)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">require</span> &#x27;eglot)</span><br><span class="line"></span><br><span class="line">(<span class="name">setq</span> eglot-server-programs</span><br><span class="line">      &#x27;(((c++-mode c-mode c++-ts-mode c-ts-mode) . (<span class="string">&quot;clangd&quot;</span>))</span><br><span class="line">        ((rust-ts-mode rust-mode) . (<span class="string">&quot;rust-analyzer&quot;</span></span><br><span class="line">                                     :initializationOptions</span><br><span class="line">                                     (:checkCommand <span class="string">&quot;clippy&quot;</span>)))))</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c-mode-hook &#x27;eglot-ensure)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c++-mode-hook &#x27;eglot-ensure)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c-ts-mode-hook &#x27;eglot-ensure)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c++-ts-mode-hook &#x27;eglot-ensure)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;rust-mode-hook &#x27;eglot-ensure)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;rust-ts-mode-hook &#x27;eglot-ensure)</span><br><span class="line"></span><br><span class="line"><span class="comment">;; ------------------------</span></span><br><span class="line"><span class="comment">;; Company-mode 自动补全配置</span></span><br><span class="line"><span class="comment">;; ------------------------</span></span><br><span class="line">(<span class="name">use-package</span> company <span class="symbol">:ensure</span> <span class="literal">t</span> <span class="symbol">:defer</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:hook</span> (<span class="name">after-init</span> . global-company-mode))</span><br><span class="line"></span><br><span class="line"><span class="comment">;;-------------------------</span></span><br><span class="line"><span class="comment">;; 设置格式化代码</span></span><br><span class="line"><span class="comment">;;-------------------------</span></span><br><span class="line">(<span class="name">use-package</span> format-all</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:commands</span> format-all-mode</span><br><span class="line">  <span class="symbol">:hook</span> (<span class="name">prog-mode</span> . format-all-mode)</span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">setq-default</span> format-all-formatters</span><br><span class="line">                &#x27;((<span class="string">&quot;C&quot;</span>     (clang-format )))))</span><br><span class="line"><span class="comment">;;快捷键绑定</span></span><br><span class="line">(<span class="name">global-set-key</span> (<span class="name">kbd</span> <span class="string">&quot;C-x f&quot;</span>) &#x27;format-all-buffer)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;;---------------------------------</span></span><br><span class="line"><span class="comment">;; UI界面</span></span><br><span class="line"><span class="comment">;;---------------------------------</span></span><br><span class="line"><span class="comment">;; 安装 neotree,文件浏览侧边栏</span></span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> neotree</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:bind</span> ([f8] . neotree-toggle)</span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">setq</span> neo-theme (<span class="name">if</span> (<span class="name">display-graphic-p</span>) &#x27;icons &#x27;arrow))</span><br><span class="line">  (<span class="name">setq</span> neo-window-fixed-size <span class="literal">nil</span>))</span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> all-the-icons</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">unless</span> (<span class="name">member</span> <span class="string">&quot;all-the-icons&quot;</span> (<span class="name">font-family-list</span>))</span><br><span class="line">    (<span class="name">all-the-icons-install-fonts</span> <span class="literal">t</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">;;面包屑</span></span><br><span class="line">(<span class="name">use-package</span> breadcrumb</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">breadcrumb-mode</span> <span class="number">+1</span>))</span><br><span class="line"><span class="comment">;;仪表盘</span></span><br><span class="line">(<span class="name">use-package</span> dashboard</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">setq</span> dashboard-center-content <span class="literal">t</span>)</span><br><span class="line">  (<span class="name">dashboard-setup-startup-hook</span>))</span><br><span class="line"><span class="comment">;; 改进分页符显示</span></span><br><span class="line">(<span class="name">use-package</span> page-break-lines</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">page-break-lines-mode</span> <span class="number">+1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;; ------------------------</span></span><br><span class="line"><span class="comment">;; 设置 Fira Code Light 字体</span></span><br><span class="line"><span class="comment">;; ------------------------</span></span><br><span class="line">(<span class="name">defun</span> my-setup-fira-code ()</span><br><span class="line">  <span class="string">&quot;设置 Fira Code 字体和连体字功能，针对 C/C++ 模式。&quot;</span></span><br><span class="line">  (<span class="name">set-face-attribute</span> &#x27;default <span class="literal">nil</span> <span class="symbol">:family</span> <span class="string">&quot;Fira Code&quot;</span> <span class="symbol">:height</span> <span class="number">120</span>))</span><br><span class="line"></span><br><span class="line">(<span class="name">add-hook</span> &#x27;c-mode-hook &#x27;my-setup-fira-code)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c++-mode-hook &#x27;my-setup-fira-code)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c-ts-mode-hook &#x27;my-setup-fira-code)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c++-ts-mode-hook &#x27;my-setup-fira-code)</span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> ligature</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">ligature-set-ligatures</span> &#x27;prog-mode &#x27;(<span class="string">&quot;www&quot;</span> <span class="string">&quot;**&quot;</span> <span class="string">&quot;***&quot;</span> <span class="string">&quot;**/&quot;</span> <span class="string">&quot;*&gt;&quot;</span> <span class="string">&quot;*/&quot;</span> <span class="string">&quot;//&quot;</span> <span class="string">&quot;&amp;&amp;&quot;</span> <span class="string">&quot;||&quot;</span> <span class="string">&quot;==&quot;</span> <span class="string">&quot;===&quot;</span> <span class="string">&quot;!=&quot;</span> <span class="string">&quot;!==&quot;</span> <span class="string">&quot;=&gt;&quot;</span> <span class="string">&quot;-&gt;&quot;</span>))</span><br><span class="line">  <span class="comment">;; 只在 C/C++ 模式下启用连体字</span></span><br><span class="line">  (<span class="name">add-hook</span> &#x27;c-mode-hook (<span class="name">lambda</span> () (<span class="name">ligature-set-ligatures</span> &#x27;c-mode &#x27;(<span class="string">&quot;-&gt;&quot;</span> <span class="string">&quot;&amp;&amp;&quot;</span> <span class="string">&quot;||&quot;</span> <span class="string">&quot;==&quot;</span> <span class="string">&quot;!=&quot;</span>))))</span><br><span class="line">  (<span class="name">add-hook</span> &#x27;c++-mode-hook (<span class="name">lambda</span> () (<span class="name">ligature-set-ligatures</span> &#x27;c++-mode &#x27;(<span class="string">&quot;-&gt;&quot;</span> <span class="string">&quot;&amp;&amp;&quot;</span> <span class="string">&quot;||&quot;</span> <span class="string">&quot;==&quot;</span> <span class="string">&quot;!=&quot;</span>))))</span><br><span class="line">  (<span class="name">add-hook</span> &#x27;c-ts-mode-hook (<span class="name">lambda</span> () (<span class="name">ligature-set-ligatures</span> &#x27;c-mode &#x27;(<span class="string">&quot;-&gt;&quot;</span> <span class="string">&quot;&amp;&amp;&quot;</span> <span class="string">&quot;||&quot;</span> <span class="string">&quot;==&quot;</span> <span class="string">&quot;!=&quot;</span>))))</span><br><span class="line">  (<span class="name">add-hook</span> &#x27;c++-ts-mode-hook (<span class="name">lambda</span> () (<span class="name">ligature-set-ligatures</span> &#x27;c++-mode &#x27;(<span class="string">&quot;-&gt;&quot;</span> <span class="string">&quot;&amp;&amp;&quot;</span> <span class="string">&quot;||&quot;</span> <span class="string">&quot;==&quot;</span> <span class="string">&quot;!=&quot;</span>))))</span><br><span class="line">  <span class="comment">;; 全局启用连体字支持，但只在特定模式中生效</span></span><br><span class="line">  (<span class="name">global-ligature-mode</span> <span class="literal">t</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">custom-set-variables</span></span><br><span class="line"> <span class="comment">;; custom-set-variables was added by Custom.</span></span><br><span class="line"> <span class="comment">;; If you edit it by hand, you could mess it up, so be careful.</span></span><br><span class="line"> <span class="comment">;; Your init file should contain only one such instance.</span></span><br><span class="line"> <span class="comment">;; If there is more than one, they won&#x27;t work right.</span></span><br><span class="line"> &#x27;(package-selected-packages</span><br><span class="line">   &#x27;(page-break-lines dashboard breadcrumb all-the-icons treesit-ispell treesit-auto tree-sitter neotree format-all flycheck exec-path-from-shell company)))</span><br><span class="line">(<span class="name">custom-set-faces</span></span><br><span class="line"> <span class="comment">;; custom-set-faces was added by Custom.</span></span><br><span class="line"> <span class="comment">;; If you edit it by hand, you could mess it up, so be careful.</span></span><br><span class="line"> <span class="comment">;; Your init file should contain only one such instance.</span></span><br><span class="line"> <span class="comment">;; If there is more than one, they won&#x27;t work right.</span></span><br><span class="line"> )</span><br></pre></td></tr></table></figure></p><h2 id="nox-无GUI"><a href="#nox-无GUI" class="headerlink" title="nox (无GUI)"></a>nox (无GUI)</h2><p>.emacs<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setq</span> inhibit-startup-message <span class="literal">t</span>)</span><br><span class="line">(<span class="name">setq</span> initial-scratch-message <span class="literal">nil</span>)</span><br><span class="line">(<span class="name">menu-bar-mode</span> <span class="number">-1</span>)</span><br><span class="line">(<span class="name">setq</span> ring-bell-function &#x27;ignore)</span><br><span class="line">(<span class="name">global-display-line-numbers-mode</span> <span class="literal">t</span>)</span><br><span class="line">(<span class="name">defalias</span> &#x27;yes-or-no-p &#x27;y-or-n-p)</span><br><span class="line">(<span class="name">setq</span> make-backup-files <span class="literal">nil</span>)</span><br><span class="line">(<span class="name">setq</span> create-lockfiles <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">prefer-coding-system</span> &#x27;utf-8)</span><br><span class="line">(<span class="name">setq</span> locale-coding-system &#x27;utf-8)</span><br><span class="line">(<span class="name">set-keyboard-coding-system</span> &#x27;utf-8)</span><br><span class="line">(<span class="name">set-selection-coding-system</span> &#x27;utf-8)</span><br><span class="line">(<span class="name">set-terminal-coding-system</span> &#x27;utf-8)</span><br><span class="line">(<span class="name">setq-default</span> buffer-file-coding-system &#x27;utf-8)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">setq-default</span> indent-tabs-mode <span class="literal">nil</span>)</span><br><span class="line">(<span class="name">setq</span> find-file-encoding &#x27;auto)</span><br><span class="line">(<span class="name">setq-default</span> coding-system-for-read &#x27;utf-8)</span><br><span class="line">(<span class="name">setq-default</span> coding-system-for-write &#x27;utf-8)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> package</span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">add-to-list</span> &#x27;package-archives &#x27;(<span class="string">&quot;melpa&quot;</span> . <span class="string">&quot;https://melpa.org/packages/&quot;</span>))</span><br><span class="line">  (<span class="name">unless</span> (<span class="name">bound-and-true-p</span> package--initialized)</span><br><span class="line">    (<span class="name">package-initialize</span>)))</span><br><span class="line"></span><br><span class="line">(<span class="name">setq</span> use-package-always-ensure <span class="literal">t</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> exec-path-from-shell</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">when</span> (<span class="name">memq</span> window-system &#x27;(mac ns x))</span><br><span class="line">    (<span class="name">exec-path-from-shell-initialize</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> tree-sitter</span><br><span class="line">  <span class="symbol">:when</span> (<span class="name">and</span> (<span class="name">fboundp</span> &#x27;treesit-available-p)</span><br><span class="line">         (<span class="name">treesit-available-p</span>))</span><br><span class="line">  <span class="symbol">:config</span> (<span class="name">setq</span> treesit-font-lock-level <span class="number">4</span>)</span><br><span class="line">  <span class="symbol">:init</span></span><br><span class="line">  (<span class="name">setq</span> treesit-language-source-alist</span><br><span class="line">    &#x27;((bash       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-bash&quot;</span>))</span><br><span class="line">      (c          . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-c&quot;</span>))</span><br><span class="line">      (cpp        . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-cpp&quot;</span>))</span><br><span class="line">      (python     . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-python&quot;</span>))</span><br><span class="line">      (rust       . (<span class="string">&quot;https://github.com/tree-sitter/tree-sitter-rust&quot;</span>)))))</span><br><span class="line"></span><br><span class="line">(<span class="name">require</span> &#x27;eglot)</span><br><span class="line"></span><br><span class="line">(<span class="name">setq</span> eglot-server-programs</span><br><span class="line">      &#x27;(((c++-mode c-mode) . (<span class="string">&quot;clangd&quot;</span>))</span><br><span class="line">        ((rust-mode) . (<span class="string">&quot;rust-analyzer&quot;</span>))))</span><br><span class="line"></span><br><span class="line">(<span class="name">add-hook</span> &#x27;c-mode-hook &#x27;eglot-ensure)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;c++-mode-hook &#x27;eglot-ensure)</span><br><span class="line">(<span class="name">add-hook</span> &#x27;rust-mode-hook &#x27;eglot-ensure)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> company <span class="symbol">:ensure</span> <span class="literal">t</span> <span class="symbol">:defer</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:hook</span> (<span class="name">after-init</span> . global-company-mode))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">use-package</span> format-all</span><br><span class="line">  <span class="symbol">:ensure</span> <span class="literal">t</span></span><br><span class="line">  <span class="symbol">:commands</span> format-all-mode</span><br><span class="line">  <span class="symbol">:hook</span> (<span class="name">prog-mode</span> . format-all-mode)</span><br><span class="line">  <span class="symbol">:config</span></span><br><span class="line">  (<span class="name">setq-default</span> format-all-formatters</span><br><span class="line">                &#x27;((<span class="string">&quot;C&quot;</span> (clang-format)))))</span><br><span class="line"></span><br><span class="line">(<span class="name">global-set-key</span> (<span class="name">kbd</span> <span class="string">&quot;C-x f&quot;</span>) &#x27;format-all-buffer)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="name">custom-set-variables</span></span><br><span class="line"> <span class="comment">;; custom-set-variables was added by Custom.</span></span><br><span class="line"> <span class="comment">;; If you edit it by hand, you could mess it up, so be careful.</span></span><br><span class="line"> <span class="comment">;; Your init file should contain only one such instance.</span></span><br><span class="line"> <span class="comment">;; If there is more than one, they won&#x27;t work right.</span></span><br><span class="line"> &#x27;(package-selected-packages</span><br><span class="line">   &#x27;(page-break-lines dashboard breadcrumb all-the-icons treesit-ispell treesit-auto tree-sitter neotree format-all flycheck exec-path-from-shell company)))</span><br><span class="line">(<span class="name">custom-set-faces</span></span><br><span class="line"> <span class="comment">;; custom-set-faces was added by Custom.</span></span><br><span class="line"> <span class="comment">;; If you edit it by hand, you could mess it up, so be careful.</span></span><br><span class="line"> <span class="comment">;; Your init file should contain only one such instance.</span></span><br><span class="line"> <span class="comment">;; If there is more than one, they won&#x27;t work right.</span></span><br><span class="line"> )</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> emacs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下基于edk2的UEFI开发环境搭建</title>
      <link href="/posts/42853/"/>
      <url>/posts/42853/</url>
      
        <content type="html"><![CDATA[<h1 id="基本环境搭建"><a href="#基本环境搭建" class="headerlink" title="基本环境搭建"></a>基本环境搭建</h1><p>这是我的硬件环境及操作系统</p><p><img src="https://cdn.jsdelivr.net/gh/even629/myPicGo/pc_environment.png" alt="硬件环境"></p><h2 id="下载-edk2-源码"><a href="#下载-edk2-源码" class="headerlink" title="下载 edk2 源码"></a>下载 edk2 源码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装需要的软件包</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install git</span><br><span class="line"><span class="built_in">mkdir</span> -p ~/UEFI</span><br><span class="line"><span class="built_in">cd</span> UEFI</span><br><span class="line">git <span class="built_in">clone</span> <span class="string">&quot;https://github.com/tianocore/edk2.git&quot;</span></span><br><span class="line"><span class="built_in">cd</span> edk2</span><br><span class="line"><span class="comment"># 使用这个分支</span></span><br><span class="line">git checkout origin/stable/202408</span><br><span class="line">git submodule update --init --recursive</span><br><span class="line">git branch</span><br><span class="line"><span class="comment"># 查看子模块是否都已正确初始化，如果子模块未下载完毕，编译时会有一些问题</span></span><br><span class="line">git submodule status</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line"><span class="comment"># 下载edk2-libc的代码，这个主要是为了在UEFI开发中使用c标准库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/tianocore/edk2-libc.git</span><br><span class="line"><span class="comment"># 创建code文件夹用于存放我们自己的代码</span></span><br><span class="line"><span class="built_in">mkdir</span> -p code</span><br></pre></td></tr></table></figure><h2 id="安装编译工具"><a href="#安装编译工具" class="headerlink" title="安装编译工具"></a>安装编译工具</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载一些基本软件包</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install python3 python3-distutils uuid-dev build-essential bison flex nasm acpica-tools gcc</span><br><span class="line"><span class="comment"># 安装arm的编译器, 这里主要是为了编译aarch64的</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/UEFI/toolchain</span><br><span class="line"><span class="built_in">cd</span> ~/UEFI/toolchain</span><br><span class="line">wget https://developer.arm.com/-/media/Files/downloads/gnu-a/8.2-2019.01/gcc-arm-8.2-2019.01-x86_64-aarch64-elf.tar.xz</span><br><span class="line">tar -xf gcc-arm-8.2-2019.01-x86_64-aarch64-elf.tar.xz</span><br><span class="line"><span class="built_in">cd</span> -</span><br></pre></td></tr></table></figure><h1 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h1><p>下面来通过一个例子 HelloWorld 来实现实现编译 UEFI 代码到目标平台为 x64 或 aarch64, 并支持在 Emulator 和 qemu 中运行, 最后用 gdb 调试程序</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> HelloWorld.dsc</span><br><span class="line"><span class="built_in">touch</span> HelloWorld.inf</span><br><span class="line"><span class="built_in">touch</span> HelloWorld.c</span><br><span class="line"><span class="comment"># 这个命令行工具可以生成uuid, 后面的dsc和inf中的uuid都是这样生成的</span></span><br><span class="line">uuidgen</span><br></pre></td></tr></table></figure><p><strong>HelloWorld.dsc</strong></p><p>DSC文件是包描述文件，其中<strong>Defines</strong>中的所有字段都是强制性的。</p><p>对于LibraryClasses中的路径可以通过以下命令查找</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> edk2</span><br><span class="line"><span class="comment"># 以UefiApplicationEntryPoint为例</span></span><br><span class="line">grep UefiApplicationEntryPoint -r ./ --include=*.inf | grep LIBRARY_CLASS</span><br><span class="line"><span class="comment"># 通过GUID查找</span></span><br><span class="line">grep -i 752F3136 -r ./ --exclude-dir=Build</span><br></pre></td></tr></table></figure><p>LibraryClasses的格式是<br><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LibraryClassName|Path/To/LibInstanceName.inf</span><br></pre></td></tr></table></figure></p><p>对于DSC文件的完整解释，参考以下链接：<br>   <div class="tag link"><a class="link-card" title="INF-Specification" href="https://tianocore-docs.github.io/edk2-DscSpecification/release-1.28/"><div class="left"><img src="https://tianocore-docs.github.io/edk2-DscSpecification/release-1.28/gitbook/images/favicon.ico"/></div><div class="right"><p class="text">INF-Specification</p><p class="url">https://tianocore-docs.github.io/edk2-DscSpecification/release-1.28/</p></div></a></div></p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Defines]</span></span><br><span class="line">  <span class="attr">DSC_SPECIFICATION</span>         = <span class="number">0</span>x0001001A</span><br><span class="line">  <span class="attr">PLATFORM_GUID</span>             = c08977d4-<span class="number">6</span>e87-<span class="number">42</span>f6-bf5c-<span class="number">4</span>d41cfe7ba53</span><br><span class="line">  <span class="attr">PLATFORM_VERSION</span>          = <span class="number">0.01</span></span><br><span class="line">  <span class="attr">PLATFORM_NAME</span>             = HelloWorld</span><br><span class="line">  <span class="attr">SKUID_IDENTIFIER</span>          = DEFAULT</span><br><span class="line">  <span class="attr">SUPPORTED_ARCHITECTURES</span>   = AARCH64|X64</span><br><span class="line">  <span class="attr">BUILD_TARGETS</span>             = DEBUG|RELEASE|NOOPT</span><br><span class="line">  <span class="attr">OUTPUT_DIRECTORY</span>          = $(PKG_OUTPUT_DIR)</span><br><span class="line"></span><br><span class="line"><span class="section">[LibraryClasses]</span></span><br><span class="line">  BaseLib|MdePkg/Library/BaseLib/BaseLib.inf</span><br><span class="line">  BaseMemoryLib|MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf</span><br><span class="line">  DevicePathLib|MdePkg/Library/UefiDevicePathLib/UefiDevicePathLib.inf</span><br><span class="line">  MemoryAllocationLib|MdePkg/Library/UefiMemoryAllocationLib/UefiMemoryAllocationLib.inf</span><br><span class="line">  PrintLib|MdePkg/Library/BasePrintLib/BasePrintLib.inf</span><br><span class="line">  UefiLib|MdePkg/Library/UefiLib/UefiLib.inf</span><br><span class="line">  UefiHiiServicesLib|MdeModulePkg/Library/UefiHiiServicesLib/UefiHiiServicesLib.inf</span><br><span class="line">  ShellCEntryLib|ShellPkg/Library/UefiShellCEntryLib/UefiShellCEntryLib.inf</span><br><span class="line">  HiiLib|MdeModulePkg/Library/UefiHiiLib/UefiHiiLib.inf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  UefiApplicationEntryPoint|MdePkg/Library/UefiApplicationEntryPoint/UefiApplicationEntryPoint.inf</span><br><span class="line">  UefiBootServicesTableLib|MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf</span><br><span class="line">  UefiRuntimeServicesTableLib|MdePkg/Library/UefiRuntimeServicesTableLib/UefiRuntimeServicesTableLib.inf</span><br><span class="line"></span><br><span class="line">  DebugLib|MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf</span><br><span class="line">  PcdLib|MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf</span><br><span class="line"></span><br><span class="line"><span class="section">[LibraryClasses.ARM,LibraryClasses.AARCH64]</span></span><br><span class="line">  NULL|ArmPkg/Library/CompilerIntrinsicsLib/CompilerIntrinsicsLib.inf</span><br><span class="line">  NULL|MdePkg/Library/BaseStackCheckLib/BaseStackCheckLib.inf</span><br><span class="line"></span><br><span class="line"><span class="section">[LibraryClasses.X64]</span></span><br><span class="line">  RegisterFilterLib|MdePkg/Library/RegisterFilterLibNull/RegisterFilterLibNull.inf</span><br><span class="line"></span><br><span class="line"><span class="section">[Components]</span></span><br><span class="line">  HelloWorld.inf</span><br></pre></td></tr></table></figure><p><strong>HelloWorld.inf</strong></p><p>INF文件是edk2 app的配置文件，其中</p><ul><li>[Defines] 该节定义了一些模块的基本信息<ul><li>BASE_NAME app的名称</li><li>FILE_GUID 可以通过命令uuidgen生成，UEFI通过GUID来区分不同的模块</li><li>MODULE_TYPE 这里填UEFI_APPLICATION</li><li>ENTRY_POINT c代码中的主函数的名称</li></ul></li><li>[Sources] 模块的源代码，一般是.c,.h文件</li><li>[Packages] 需要使用到的包</li><li>[LibraryClasses] 需要使用到的库</li></ul><p>对于INF文件的完整解释，参考以下链接：<br>   <div class="tag link"><a class="link-card" title="INF-Specification" href="https://tianocore-docs.github.io/edk2-InfSpecification/release-1.27/"><div class="left"><img src="https://tianocore-docs.github.io/edk2-InfSpecification/release-1.27/gitbook/images/favicon.ico"/></div><div class="right"><p class="text">INF-Specification</p><p class="url">https://tianocore-docs.github.io/edk2-InfSpecification/release-1.27/</p></div></a></div></p><p>下面是定义的一个简单的模块<br><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Variables defined to be used during the build process</span></span><br><span class="line"><span class="section">[Defines]</span></span><br><span class="line">  <span class="attr">INF_VERSION</span>       = <span class="number">1.25</span></span><br><span class="line">  <span class="attr">BASE_NAME</span>         = HelloWorld</span><br><span class="line">  <span class="attr">FILE_GUID</span>         = <span class="number">5455334</span>b-dbd9-<span class="number">4</span>f95-b6ed-<span class="number">5</span>ae261a6a0c1</span><br><span class="line">  <span class="attr">MODULE_TYPE</span>       = UEFI_APPLICATION</span><br><span class="line">  <span class="attr">VERSION_STRING</span>    = <span class="number">1.0</span></span><br><span class="line">  <span class="attr">ENTRY_POINT</span>       = UefiMain</span><br><span class="line"></span><br><span class="line"><span class="comment"># Source code</span></span><br><span class="line"><span class="section">[Sources]</span></span><br><span class="line">  HelloWorld.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># Required packages</span></span><br><span class="line"><span class="section">[Packages]</span></span><br><span class="line">  MdePkg/MdePkg.dec            <span class="comment"># Contains Uefi and UefiLib</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Required Libraries</span></span><br><span class="line"><span class="section">[LibraryClasses]</span></span><br><span class="line">  UefiApplicationEntryPoint    <span class="comment"># Uefi application entry point</span></span><br><span class="line">  UefiLib                      <span class="comment"># UefiLib</span></span><br><span class="line">  UefiBootServicesTableLib</span><br></pre></td></tr></table></figure></p><p><strong>HelloWorld.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Uefi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">EFI_STATUS</span><br><span class="line">EFIAPI</span><br><span class="line"><span class="title function_">UefiMain</span><span class="params">(IN EFI_HANDLE ImageHandle, IN EFI_SYSTEM_TABLE *SystemTable)</span> &#123;</span><br><span class="line">  Print(<span class="string">L&quot;Hello World!!!\n&quot;</span>);</span><br><span class="line">  SystemTable-&gt;BootServices-&gt;Stall(<span class="number">10000000</span>);</span><br><span class="line">  <span class="keyword">return</span> EFI_SUCCESS;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译脚本"><a href="#编译脚本" class="headerlink" title="编译脚本"></a>编译脚本</h2><p>首先我们需要创建一个脚本，用于设置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> env.sh</span><br><span class="line"><span class="built_in">chmod</span> a+x env.sh</span><br></pre></td></tr></table></figure><p><strong>env.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 项目名称,也是源代码的源文件目录</span></span><br><span class="line"><span class="built_in">export</span> PROJ_NAME=<span class="string">&quot;HelloWorld&quot;</span></span><br><span class="line"><span class="comment"># dsc文件名</span></span><br><span class="line"><span class="built_in">export</span> DSC_NAME=<span class="string">&quot;HelloWorld&quot;</span></span><br><span class="line"><span class="comment"># inf文件名</span></span><br><span class="line"><span class="built_in">export</span> INF_NAME=<span class="string">&quot;HelloWorld&quot;</span></span><br><span class="line"><span class="comment"># 也是编译生成的*.efi的名字，在inf的BASE_NAME中定义</span></span><br><span class="line"><span class="built_in">export</span> INF_BASE_NAME=<span class="string">&quot;HelloWorld&quot;</span></span><br><span class="line"><span class="comment"># UEFI 工作目录</span></span><br><span class="line"><span class="built_in">export</span> UEFI_WORKSPACE=<span class="string">&quot;<span class="variable">$HOME</span>/UEFI&quot;</span></span><br><span class="line"><span class="comment"># EDK II 路径</span></span><br><span class="line"><span class="built_in">export</span> EDK_PATH=<span class="string">&quot;<span class="variable">$UEFI_WORKSPACE</span>/edk2&quot;</span></span><br><span class="line"><span class="comment"># EDK II libc路径</span></span><br><span class="line"><span class="built_in">export</span> EDK_LIBC_PATH=<span class="string">&quot;<span class="variable">$UEFI_WORKSPACE</span>/edk2-libc&quot;</span></span><br><span class="line"><span class="comment"># 应用代码路径</span></span><br><span class="line"><span class="built_in">export</span> APP_PATH=<span class="string">&quot;<span class="variable">$UEFI_WORKSPACE</span>/code/<span class="variable">$PROJ_NAME</span>&quot;</span></span><br><span class="line"><span class="comment"># 构建输出目录</span></span><br><span class="line"><span class="built_in">export</span> PKG_OUTPUT_DIR=<span class="string">&quot;<span class="variable">$APP_PATH</span>/Build&quot;</span></span><br><span class="line"><span class="comment"># 模拟器路径</span></span><br><span class="line"><span class="built_in">export</span> EMULATOR_PATH=<span class="string">&quot;<span class="variable">$EDK_PATH</span>/Build/EmulatorX64/DEBUG_GCC5/X64&quot;</span></span><br><span class="line"><span class="comment"># 包路径设置，支持多个路径，用冒号分隔</span></span><br><span class="line"><span class="built_in">export</span> PACKAGES_PATH=<span class="string">&quot;<span class="variable">$EDK_PATH</span>:<span class="variable">$EDK_LIBC_PATH</span>:<span class="variable">$APP_PATH</span>&quot;</span></span><br><span class="line"><span class="comment"># 指定 Python 解释器</span></span><br><span class="line"><span class="built_in">export</span> PYTHON_COMMAND=<span class="string">&quot;/usr/bin/python3&quot;</span></span><br><span class="line"><span class="comment"># 确认设置完成</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Environment variables for <span class="variable">$PROJ_NAME</span> project are configured.&quot;</span></span><br></pre></td></tr></table></figure><p>接下写一个脚本实现编译我们的代码到 x64 目标平台</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> build-x64.sh</span><br><span class="line"><span class="built_in">chmod</span> a+x build-x64.sh</span><br></pre></td></tr></table></figure><p><strong>build-x64.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;Exiting&quot;</span> INT</span><br><span class="line"></span><br><span class="line"><span class="comment"># environment variables</span></span><br><span class="line"><span class="built_in">source</span> env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GCC5=/usr/bin/gcc</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$EDK_PATH</span></span><br><span class="line"><span class="built_in">source</span> edksetup.sh</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line"></span><br><span class="line"><span class="comment"># Building BaseTools</span></span><br><span class="line">make -C <span class="variable">$EDK_PATH</span>/BaseTools</span><br><span class="line"><span class="comment"># 这里设置-b参数为DEBUG，需要部署时用RELEASE</span></span><br><span class="line"><span class="comment"># -p --platform=</span></span><br><span class="line"><span class="comment"># -m --module=</span></span><br><span class="line"><span class="comment"># -a --arch=</span></span><br><span class="line"><span class="comment"># -b --buildtarget=</span></span><br><span class="line"><span class="comment"># -t --taggname=</span></span><br><span class="line">build -p <span class="variable">$APP_PATH</span>/<span class="variable">$DSC_NAME</span>.dsc -m <span class="variable">$APP_PATH</span>/<span class="variable">$INF_NAME</span>.inf -a X64 -t GCC5 -b DEBUG -D PKG_OUTPUT_DIR=<span class="variable">$PKG_OUTPUT_DIR</span></span><br></pre></td></tr></table></figure><p>编译到 aarch64 平台同理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> build-aarch64.sh</span><br><span class="line"><span class="built_in">chmod</span> a+x build-aarch64.sh</span><br></pre></td></tr></table></figure><p><strong>build-aarch64.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;Exiting&quot;</span> INT</span><br><span class="line"></span><br><span class="line"><span class="comment"># environment variables</span></span><br><span class="line"><span class="built_in">source</span> env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GCC5_AARCH64_PREFIX=<span class="variable">$UEFI_WORKSPACE</span>/toolchain/gcc-arm-8.2-2019.01-x86_64-aarch64-elf/bin/aarch64-elf-</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$EDK_PATH</span></span><br><span class="line"><span class="built_in">source</span> edksetup.sh</span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line"></span><br><span class="line"><span class="comment"># Building BaseTools</span></span><br><span class="line">make -C <span class="variable">$EDK_PATH</span>/BaseTools</span><br><span class="line"></span><br><span class="line">build -p <span class="variable">$APP_PATH</span>/<span class="variable">$DSC_NAME</span>.dsc -m <span class="variable">$APP_PATH</span>/<span class="variable">$INF_NAME</span>.inf -a AARCH64 -t GCC5 -b DEBUG -D PKG_OUTPUT_DIR=<span class="variable">$PKG_OUTPUT_DIR</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><h3 id="Emulator-运行"><a href="#Emulator-运行" class="headerlink" title="Emulator 运行"></a>Emulator 运行</h3><p>最后我们写一个脚本在 edk2 自带的模拟器上运行一下, 注意<strong>这里需要你有 gui 环境</strong>, 如果是只有命令行则跳过这一步, 看下面一节用 qemu 运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> run.sh</span><br><span class="line"><span class="built_in">chmod</span> a+x run.sh</span><br></pre></td></tr></table></figure><p><strong>run.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;Exiting&quot;</span> INT</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GCC5=/usr/bin/gcc</span><br><span class="line"><span class="comment"># Emulator编译,编译过一次就不用再编译了</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$EDK_PATH</span></span><br><span class="line"><span class="built_in">source</span> edksetup.sh</span><br><span class="line">build -p <span class="variable">$EDK_PATH</span>/EmulatorPkg/EmulatorPkg.dsc -t GCC5 -a X64</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p <span class="variable">$EMULATOR_PATH</span>/UEFI_Disk</span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> <span class="variable">$APP_PATH</span>/Build/DEBUG_GCC5/X64/<span class="variable">$INF_BASE_NAME</span>.efi <span class="variable">$EMULATOR_PATH</span>/UEFI_Disk/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$EMULATOR_PATH</span></span><br><span class="line">./Host</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="qemu-运行"><a href="#qemu-运行" class="headerlink" title="qemu 运行"></a>qemu 运行</h3><p>首先编译并安装 qemu,这里我选择 8.1.5 的版本, 如果你的没有达到预期的效果可以考虑使用这个版本的 qemu</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitlab.com/qemu-project/qemu.git</span><br><span class="line"><span class="built_in">cd</span> qemu</span><br><span class="line">git checkout stable-8.1</span><br><span class="line"><span class="built_in">sudo</span> apt install python3-venv python3-pip python3-setuptools python3-sphinx ninja-build pkg-config libglib2.0-dev libpixman-1-dev</span><br><span class="line"><span class="comment"># x86_64</span></span><br><span class="line">./configure --target-list=x86_64-softmmu</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br><span class="line"><span class="comment"># aarch64</span></span><br><span class="line">./configure --target-list=aarch64-softmmu</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure><p>接下来写脚本用 qemu 运行, 这里一些参数是为下一节用 gdb 调试程序用的, 但如果你只是想用 qemu 运行一下也不影响</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> debug.sh</span><br><span class="line"><span class="built_in">chmod</span> a+x debug.sh</span><br></pre></td></tr></table></figure><p><strong>debug-x64.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;Exiting&quot;</span> INT</span><br><span class="line"></span><br><span class="line"><span class="comment"># environment variables</span></span><br><span class="line"><span class="built_in">source</span> env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GCC5=/usr/bin/gcc</span><br><span class="line"><span class="comment"># 编译过一次就不用再编译了</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$EDK_PATH</span></span><br><span class="line"><span class="built_in">source</span> edksetup.sh</span><br><span class="line">build -a X64 -p OvmfPkg/OvmfPkgX64.dsc -t GCC5 -b DEBUG <span class="comment">#-D SOURCE_DEBUG_ENABLE</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$APP_PATH</span></span><br><span class="line"><span class="built_in">mkdir</span> -p _ovmf_dbg</span><br><span class="line"><span class="built_in">cd</span> _ovmf_dbg</span><br><span class="line"><span class="built_in">rm</span> -f debug.log</span><br><span class="line"><span class="comment"># 与ubuntu22.04软件源默认的qemu不兼容，需要升级qemu版本到v8.1.5</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$EDK_PATH</span>/Build/OvmfX64/DEBUG_GCC5/FV/OVMF.fd ./</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p UEFI_Disk</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$APP_PATH</span>/Build/DEBUG_GCC5/X64/<span class="variable">$INF_BASE_NAME</span>.efi ./UEFI_Disk/</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$APP_PATH</span>/Build/DEBUG_GCC5/X64/<span class="variable">$INF_BASE_NAME</span>.debug ./UEFI_Disk/</span><br><span class="line"></span><br><span class="line"><span class="comment"># -s 启用 GDB 调试，默认监听在 127.0.0.1:1234</span></span><br><span class="line"><span class="comment"># -bios OVMF.fd，指定 OVMF 固件文件，这是一个支持 UEFI 的 QEMU 固件。</span></span><br><span class="line"><span class="comment"># -debugcon file:debug.log 将调试输出重定向到 debug.log 文件。</span></span><br><span class="line"><span class="comment"># -global isa-debugcon.iobase=0x402 配置调试控制台的 I/O 基地址。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">qemu-system-x86_64 \</span><br><span class="line">-s \</span><br><span class="line">-bios OVMF.fd \</span><br><span class="line">-drive format=raw,file=fat:rw:UEFI_Disk/ \</span><br><span class="line">-net none \</span><br><span class="line">-debugcon file:debug.log \</span><br><span class="line">-global isa-debugcon.iobase=0x402 \</span><br><span class="line">-nographic</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个脚本首先会编译OVMF(Open Virtual Machine Firmware)，OVMF 是一个基于 EDKII 的固件，可以在 qemu x86-64 虚拟机下运行。这使得调试和实验 UEFI 固件变得更加容易；无论是用于测试操作系统启动，还是使用（内置的）EFI shell。</p><p>OVMF 固件（用于 QEMU 的 UEFI 实现）被分为两个文件：</p><ul><li>OVMF_CODE.fd：包含实际的 UEFI 固件。</li><li>OVMF_VARS.fd：作为一个“模板”用于模拟持久化的 NVRAM 存储。<br>所有虚拟机实例可以共享来自 ovmf 包的系统范围内的只读 OVMF_CODE.fd 文件，但每个实例都需要一个私有的、可写的 OVMF_VARS.fd 副本。<br>在qemu中，可以分别指定OVMF_CODE.fd和OVMF_VARS.fd，也可以采用简化的写法：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分别指定</span></span><br><span class="line">qemu-system-x86_64 -drive <span class="keyword">if</span>=pflash,format=raw,<span class="built_in">readonly</span>,file=Build/OvmfX64/RELEASE_GCC5/FV/OVMF_CODE.fd \</span><br><span class="line">                     -drive <span class="keyword">if</span>=pflash,format=raw,file=Build/OvmfX64/RELEASE_GCC5/FV/OVMF_VARS.fd \</span><br><span class="line">                     -nographic \</span><br><span class="line">                     -net none</span><br><span class="line"><span class="comment"># 简化写法</span></span><br><span class="line">qemu-system-x86_64 -drive <span class="keyword">if</span>=pflash,format=raw,file=Build/OvmfX64/RELEASE_GCC5/FV/OVMF.fd \</span><br><span class="line">                     -nographic \</span><br><span class="line">                     -net none</span><br></pre></td></tr></table></figure></li></ul><p>运行 debug-x64.sh, 不出意外会出现如下界面, 即 UEFI 的 Shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">UEFI Interactive Shell v2.2</span><br><span class="line">EDK II</span><br><span class="line">UEFI v2.70 (EDK II, 0x00010000)</span><br><span class="line">Mapping table</span><br><span class="line">      FS0: Alias(s):HD0a1:;BLK1:</span><br><span class="line">          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/HD(1,MBR,0xBE1AFDFA,0x3F,0xFBFC1)</span><br><span class="line">     BLK0: Alias(s):</span><br><span class="line">          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)</span><br><span class="line">     BLK2: Alias(s):</span><br><span class="line">          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)</span><br><span class="line">Press ESC <span class="keyword">in</span> 2 seconds to skip startup.nsh or any other key to <span class="built_in">continue</span>.</span><br><span class="line">Shell&gt;</span><br></pre></td></tr></table></figure><p>在这个 shell 中输入 fs0:(注意这有一个英文冒号), 然后输入 HelloWorld.efi 运行我们的程序,预期输出”Hello World!!!”</p><div class="tip warning faa-horizontal animated"><p>在Shell如果按BackSpace没有反应，可以按Ctrl+H代替</p></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">UEFI Interactive Shell v2.2</span><br><span class="line">EDK II</span><br><span class="line">UEFI v2.70 (EDK II, 0x00010000)</span><br><span class="line">Mapping table</span><br><span class="line">      FS0: Alias(s):HD0a1:;BLK1:</span><br><span class="line">          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)/HD(1,MBR,0xBE1AFDFA,0x3F,0xFBFC1)</span><br><span class="line">     BLK0: Alias(s):</span><br><span class="line">          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)</span><br><span class="line">     BLK2: Alias(s):</span><br><span class="line">          PciRoot(0x0)/Pci(0x1,0x1)/Ata(0x0)</span><br><span class="line">Press ESC <span class="keyword">in</span> 2 seconds to skip startup.nsh or any other key to <span class="built_in">continue</span>.</span><br><span class="line">Shell&gt; fs0:</span><br><span class="line">FS0:\&gt; <span class="built_in">ls</span></span><br><span class="line">Directory of: FS0:\</span><br><span class="line">01/08/2025  22:23                  82  gdb_commands.txt</span><br><span class="line">01/10/2025  20:22             184,544  HelloWorld.debug</span><br><span class="line">01/10/2025  20:22               5,760  HelloWorld.efi</span><br><span class="line">01/10/2025  12:22               1,391  NvVars</span><br><span class="line">          4 File(s)     191,777 bytes</span><br><span class="line">          0 Dir(s)</span><br><span class="line">FS0:\&gt; HelloWorld.efi</span><br><span class="line">Hello World!!!</span><br></pre></td></tr></table></figure><p>退出qemu按<strong>CTRL+A - X</strong></p><p>下面是aarch64版本的<br><strong>debug-aarch64.sh</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="built_in">trap</span> <span class="string">&quot;Exiting&quot;</span> INT</span><br><span class="line"></span><br><span class="line"><span class="comment"># environment variables</span></span><br><span class="line"><span class="built_in">source</span> env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> GCC5_AARCH64_PREFIX=<span class="variable">$UEFI_WORKSPACE</span>/toolchain/gcc-arm-8.2-2019.01-x86_64-aarch64-elf/bin/aarch64-elf-</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译过一次就不用再编译了</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$EDK_PATH</span></span><br><span class="line"><span class="built_in">source</span> edksetup.sh</span><br><span class="line">build -a AARCH64 -p ArmVirtPkg/ArmVirtQemu.dsc -t GCC5 -b RELEASE </span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$APP_PATH</span>/<span class="variable">$INF_NAME</span></span><br><span class="line"><span class="built_in">mkdir</span> -p _armvirt_dbg</span><br><span class="line"><span class="built_in">cd</span> _armvirt_dbg</span><br><span class="line"><span class="built_in">rm</span> -f debug.log</span><br><span class="line"><span class="comment"># 与ubuntu22.04软件源默认的qemu不兼容，需要升级qemu版本到v8.1.5</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$EDK_PATH</span>/Build/ArmVirtQemu-AARCH64/RELEASE_GCC5/FV/QEMU_EFI.fd ./</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p UEFI_Disk</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$APP_PATH</span>/<span class="variable">$INF_NAME</span>/Build/DEBUG_GCC5/AARCH64/<span class="variable">$INF_BASE_NAME</span>.efi ./UEFI_Disk/</span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$APP_PATH</span>/<span class="variable">$INF_NAME</span>/Build/DEBUG_GCC5/AARCH64/<span class="variable">$INF_BASE_NAME</span>.debug ./UEFI_Disk/</span><br><span class="line"></span><br><span class="line"><span class="comment">#qemu命令</span></span><br><span class="line">qemu-system-aarch64 \</span><br><span class="line">-machine virt,kernel_irqchip=on,gic-version=3 \</span><br><span class="line">-cpu cortex-a57 -m 1G  \</span><br><span class="line">-drive format=raw,file=fat:rw:UEFI_Disk/ \</span><br><span class="line">-bios QEMU_EFI.fd \</span><br><span class="line">-net none \</span><br><span class="line">-nographic </span><br></pre></td></tr></table></figure></p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>gdb 调试 UEFI 程序稍稍有点麻烦, 但可以用脚本自动化一些操作, 总体流程如下:</p><ol><li>运行 debug.sh, 然后进入 UEFI Shell 中运行一下代码(和上一小节用 qemu 运行一样的操作, 这里主要是为了在_ovmf_dbg/debug.log 中拿到 driver 启动的地址)</li><li>开另一个 terminal, 运行下面的脚本 addr.sh</li><li>在_ovmf_dbg/UEFI_Disk 目录下运行 gdb -x gdb_commands.txt</li><li>在 gdb 里面打断点, 比如 break UefiMain</li><li>添加 gdb 调试 target remote localhost:1234</li><li>运行,输入 c 跳到第一个断点位置</li><li>在 UEFI Shell 中运行你的代码</li></ol><p><strong>addr-x64.sh</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> env.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> _ovmf_dbg</span><br><span class="line"></span><br><span class="line">logfile=<span class="string">&quot;debug.log&quot;</span></span><br><span class="line"></span><br><span class="line">line=$(grep -oP <span class="string">&quot;Loading driver at 0x[0-9a-fA-F]+ EntryPoint=0x[0-9a-fA-F]+ <span class="variable">$INF_BASE_NAME</span>\.efi&quot;</span> <span class="string">&quot;<span class="variable">$logfile</span>&quot;</span> | <span class="built_in">tail</span> -n 1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用正则表达式提取两个地址</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$line</span> =~ Loading\ driver\ at\ (0x[0-9a-fA-F]+)\ EntryPoint=(0x[0-9a-fA-F]+)\ <span class="variable">$INF_BASE_NAME</span>\.efi ]]; <span class="keyword">then</span></span><br><span class="line">    address0=<span class="string">&quot;<span class="variable">$&#123;BASH_REMATCH[1]&#125;</span>&quot;</span></span><br><span class="line">    address1=<span class="string">&quot;<span class="variable">$&#123;BASH_REMATCH[2]&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Loading driver at <span class="variable">$address0</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;EntryPoint=<span class="variable">$address1</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Error: No matching line found, maybe you need to run <span class="variable">$INF_BASE_NAME</span> in qemu first&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> UEFI_Disk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 objdump 获取文件头信息并提取 .text 和 .data 的 File off</span></span><br><span class="line">text_offset=$(objdump -h <span class="string">&quot;<span class="variable">$INF_BASE_NAME</span>.efi&quot;</span> | awk <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  /\.text/ &#123;print $6&#125;  # 提取 .text 的 File off</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data_offset=$(objdump -h <span class="string">&quot;<span class="variable">$INF_BASE_NAME</span>.efi&quot;</span> | awk <span class="string">&#x27;</span></span><br><span class="line"><span class="string">  /\.data/ &#123;print $6&#125;  # 提取 .data 的 File off</span></span><br><span class="line"><span class="string">&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出提取的结果</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;.text file off: <span class="variable">$text_offset</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;.data file off: <span class="variable">$data_offset</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算</span></span><br><span class="line">text_addr=$((<span class="number">0</span>x<span class="variable">$&#123;address0#0x&#125;</span> + <span class="number">0</span>x<span class="variable">$&#123;text_offset&#125;</span>))</span><br><span class="line">data_addr=$((<span class="number">0</span>x<span class="variable">$&#123;address0#0x&#125;</span> + <span class="number">0</span>x<span class="variable">$&#123;data_offset&#125;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果时使用16进制格式</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;text_addr: 0x%X   data_addr: 0x%X\n&quot;</span> <span class="variable">$text_addr</span> <span class="variable">$data_addr</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">rm</span> -rf gdb_commands.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 gdb_commands.txt 文件并写入内容</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOL &gt; gdb_commands.txt</span></span><br><span class="line"><span class="string">file $&#123;INF_BASE_NAME&#125;.efi</span></span><br><span class="line"><span class="string">add-symbol-file $&#123;INF_BASE_NAME&#125;.debug 0x$(printf &quot;%X&quot; $text_addr) -s .data 0x$(printf &quot;%X&quot; $data_addr)</span></span><br><span class="line"><span class="string">EOL</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出文件内容确认</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;gdb_commands.txt has been created with the following content:&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">cat</span> gdb_commands.txt</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;run the following command to debug&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cd _ovmf_dgb/UEFI_Disk&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;gdb -x gdb_commands.txt&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;break UefiMain&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;target remote localhost:1234&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;c&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="HelloStd"><a href="#HelloStd" class="headerlink" title="HelloStd"></a>HelloStd</h1><p>另一个例子, 使用 edk-libc 实现在 UEFI 中调用标准 c 库程序</p><p>可以复制 HelloWorld.dsc，在此基础上修改 guid,然后记得修改[<strong>Components</strong>]为 HelloWorld.inf, 最后在 dsc 的[<strong>LibraryClasses</strong>]最后添加一行下面的代码</p><p><strong>HelloStd.dsc</strong></p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!include StdLib/StdLib.inc</span><br></pre></td></tr></table></figure><p>接下来是 HelloStd.inf, 首先[<strong>Defines</strong>]中的 ENTRY_POINT 要改为 ShellCEntryLib, [<strong>Packages</strong>]中添加 StdLib/StdLib.dec 和 ShellPkg/ShellPkg.dec 这两个包, [<strong>LibraryClasses</strong>]中要去掉 UefiApplicationEntryPoint, 添加 LibC 和 LibStdio 这两个库, 下面是 HelloStd.inf 的声明</p><p><strong>HelloStd.inf</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Variables defined to be used during the build process</span></span><br><span class="line">[Defines]</span><br><span class="line">  INF_VERSION       = 1.25</span><br><span class="line">  BASE_NAME         = HelloStd</span><br><span class="line">  FILE_GUID         = d0956d2b-c033-45af-8ef2-76c9d30518ec</span><br><span class="line">  MODULE_TYPE       = UEFI_APPLICATION</span><br><span class="line">  VERSION_STRING    = 1.0</span><br><span class="line">  ENTRY_POINT       = ShellCEntryLib</span><br><span class="line"></span><br><span class="line"><span class="comment"># Source code</span></span><br><span class="line">[Sources]</span><br><span class="line">  HelloStd.c</span><br><span class="line"></span><br><span class="line"><span class="comment"># Required packages</span></span><br><span class="line">[Packages]</span><br><span class="line">  MdePkg/MdePkg.dec            <span class="comment"># Contains Uefi and UefiLib</span></span><br><span class="line">  StdLib/StdLib.dec</span><br><span class="line">  ShellPkg/ShellPkg.dec</span><br><span class="line"></span><br><span class="line"><span class="comment"># Required Libraries</span></span><br><span class="line">[LibraryClasses]</span><br><span class="line">  <span class="comment"># UefiApplicationEntryPoint    # Uefi application entry point</span></span><br><span class="line">  UefiLib                      <span class="comment"># UefiLib</span></span><br><span class="line">  LibC</span><br><span class="line">  LibStdio</span><br></pre></td></tr></table></figure><p>接着我们就可以在 UEFI 中调用标准库程序了</p><p><strong>HelloStd.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/ShellCEntryLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiBootServicesTableLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Library/UefiRuntimeServicesTableLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Uefi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(IN <span class="type">int</span> Argc, IN <span class="type">char</span> **Argv)</span> &#123;</span><br><span class="line">  EFI_TIME curTime;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;HelloStd!!!\n&quot;</span>);</span><br><span class="line">  gBS-&gt;Stall(<span class="number">2000</span>);</span><br><span class="line">  gRT-&gt;GetTime(&amp;curTime, <span class="literal">NULL</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Current Time: %d-%d-%d %02d:%02d:%02d\n&quot;</span>, curTime.Year, curTime.Month,</span><br><span class="line">         curTime.Day, curTime.Hour, curTime.Minute, curTime.Second);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着更改下 env.sh 中的 PROJ_NAME, DSC_NAME, INF_NAME, INF_BASE_NAME 即可编译，运行调试等在 HelloWorld 中描述的操作</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/Kostr/UEFI-Lessons">UEFI-Lessons</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/luobing/uefi-practical-programming">UEFI编程实践 罗冰</a></div>]]></content>
      
      
      <categories>
          
          <category> UEFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UEFI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Emacs</title>
      <link href="/posts/28520/"/>
      <url>/posts/28520/</url>
      
        <content type="html"><![CDATA[<h2 id="常用选中指令"><a href="#常用选中指令" class="headerlink" title="常用选中指令"></a>常用选中指令</h2><div class="table-container"><table><thead><tr><th>指令</th><th>名字</th><th>效果</th></tr></thead><tbody><tr><td>M - h</td><td>mark-paragraph</td><td>选中段落</td></tr><tr><td>C - x + C - p</td><td>mark-page</td><td>选中整个页面</td></tr><tr><td>C - x h</td><td>mark-whole-buffer</td><td>选中整个编辑窗口内容</td></tr><tr><td>M - y</td><td>yank-pop</td><td>在C - y 之后使用，粘贴剪贴板内以前的项目</td></tr></tbody></table></div><h1 id="emacs配置文件在windows上的位置"><a href="#emacs配置文件在windows上的位置" class="headerlink" title="emacs配置文件在windows上的位置"></a>emacs配置文件在windows上的位置</h1><p>On Windows, the .emacs file may be called _emacs for backward compatibility with DOS and FAT filesystems where filenames could not start with a dot. Some users prefer to continue using such a name, because Explorer cannot create a file with a name starting with a dot, even though the filesystem and most other programs can handle it. In Emacs 22 and later, the init file may also be called.emacs.d/init.el. Many of the other files that are created by lisp packages are now stored in the.emacs.ddirectory too, so this keeps all your Emacs related files in one place.</p><p>All the files mentioned above should go in your HOME directory. The HOME directory is determined by following the steps below:</p><ol><li>If the environment variableHOME is set, use the directory it indicates.</li><li>If the registry entry HKCU\SOFTWARE\GNU\Emacs\HOME is set, use the directory it indicates.</li><li>If the registry entry HKLM\SOFTWARE\GNU\Emacs\HOME is set, use the directory it indicates. Not recommended, as it results in users sharing the same HOME directory.</li><li>If C:.emacs exists, then use C:/. This is for backward compatibility, as previous versions defaulted to C:/ if HOME was not set.</li><li>Use the user’s AppData directory, usually a directory called Application Data under the user’s profile directory, the location of which varies according to Windows version and whether the computer is part of a domain.</li></ol><p>也就是说，Emacs的配置文件有三种格式：.emacs文件、_emacs文件或者.emacs.d目录下的init.el（22或者更高版本）文件，但是，不管哪种格式，必须放对正确的目录Emacs才能找到，这个正确的目录就是HOME目录。</p><p>熟悉Linux的朋友一般都知道home目录，简单的用~表示，或者用全路径表示为/home/<xxx>，其中xxx表示用户名字，所以，在Linux下将.emacs和.emacs.d放到这个目录下就行了，但windows没有home目录的概念，所以，Emacs就按如下方式来查找配置文件：</p><ol><li>如果设置了HOME环境变量，那么就用它的值作为home目录~</li><li>如果存在注册表键值HKCU\SOFTWARE\GNU\Emacs\HOME，就用它的值作为home目录~</li><li>如果存在注册表键值HKLM\SOFTWARE\GNU\Emacs\HOME，就用它的值作为home目录~（和2的区别是，2只是针对当前用户的注册表路径，3则是针对所有用户）</li><li>如果存在C:.emacs，就用C:\作为home目录~</li><li>如果以上都不存在的话，就使用<system root>\Users<user name>\AppData\Roaming作为home目录~（对于XP和较早windows用户，需要到Documents and Settings目录下去找）</li></ol><p><strong>从以上策略来看，1是比较好的做法，所以优先级也最高，应该是属于建议的方式，于是，新建一个HOME环境变量，将它的值设为想要放置Emacs配置文件的地方既可。</strong></p><p><strong>之前我是按以上方法设置的HOME目录，不过现在我后悔了，因为我发现不光是Emacs会使用HOME这个环境变量，会使用这个变量的至少还有以下程序或者插件：</strong></p><ol><li><strong>VIM，VIM会把_viminfo文件放在这个目录；</strong></li><li><strong>VIM的neocomplcache插件，它会放置一个.neocon目录进去；</strong></li><li><strong>firefox的pentadactyl插件，它会放一个pentadactyl目录进去。</strong></li></ol><p><strong>所以，个人建议：</strong></p><ol><li><strong>如果你希望有一个公共的目录存放这些配置，就像Linux下的~目录一样，那么设置HOME这个环境变量最适合不过；</strong></li><li><strong>如果你希望这个目录只存放Emacs的配置，那么，还是不要用HOME环境变量了，去注册表里面添加一个HOME键值吧。（至少我个人比较偏向于这个方式）</strong></li></ol><p>即：</p><p>在</p><p>HKEY_LOCAL_MACHINE\SOFTWARE下新建GNU项，在GNU项下新建Emacs项，然后Emacs新建一个字符串值，键为HOME,值为要存放的路径</p><h1 id="emacs-turials"><a href="#emacs-turials" class="headerlink" title="emacs turials"></a>emacs turials</h1><p>C：Ctrl</p><p>M: Alt</p><h2 id="退出Emacs"><a href="#退出Emacs" class="headerlink" title="退出Emacs"></a>退出Emacs</h2><p><strong>C-x C-c</strong></p><h2 id="退出一个正在运行中的命令"><a href="#退出一个正在运行中的命令" class="headerlink" title="退出一个正在运行中的命令"></a>退出一个正在运行中的命令</h2><p><strong>C-g</strong></p><h2 id="移动到下一屏"><a href="#移动到下一屏" class="headerlink" title="移动到下一屏"></a>移动到下一屏</h2><p><strong>C-v</strong></p><h2 id="移动到上一屏"><a href="#移动到上一屏" class="headerlink" title="移动到上一屏"></a>移动到上一屏</h2><p><strong>M-v</strong></p><h2 id="重绘屏幕，将光标所在的行置于屏幕的中央"><a href="#重绘屏幕，将光标所在的行置于屏幕的中央" class="headerlink" title="重绘屏幕，将光标所在的行置于屏幕的中央"></a>重绘屏幕，将光标所在的行置于屏幕的中央</h2><p><strong>C-l（这里是CTRL-L）</strong></p><h2 id="基本光标控制"><a href="#基本光标控制" class="headerlink" title="基本光标控制"></a>基本光标控制</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">上一行 C-p</span><br><span class="line">                              :</span><br><span class="line">                              :</span><br><span class="line">        向左移 C-b .... 目前光标位置 .... 向右移 C-f</span><br><span class="line">                              :</span><br><span class="line">                              :</span><br><span class="line">                         下一行 C-n</span><br></pre></td></tr></table></figure><p>每行文字都以一个“换行符”结束，“换行符”把行与行区分开来。（通常情况下，一个文件的最后一行会有一个换行符，但是 Emacs 不强制要求这一点。）</p><h3 id="上一行"><a href="#上一行" class="headerlink" title="上一行"></a>上一行</h3><p><strong>C-p</strong></p><p>previous</p><h3 id="下一行"><a href="#下一行" class="headerlink" title="下一行"></a>下一行</h3><p><strong>C-n</strong></p><p>next</p><h3 id="向左移一个字符"><a href="#向左移一个字符" class="headerlink" title="向左移一个字符"></a>向左移一个字符</h3><p><strong>C-b</strong></p><p>backward</p><h3 id="向右移一个字符"><a href="#向右移一个字符" class="headerlink" title="向右移一个字符"></a>向右移一个字符</h3><p><strong>C-f</strong></p><p>forward</p><h3 id="光标向前移动一个词"><a href="#光标向前移动一个词" class="headerlink" title="光标向前移动一个词"></a>光标向前移动一个词</h3><p>这里词对于英文来说是一个英文单词，对于中文来说是移动到下一个标点符号</p><p><strong>M-f</strong></p><h3 id="光标向后移动一个词"><a href="#光标向后移动一个词" class="headerlink" title="光标向后移动一个词"></a>光标向后移动一个词</h3><p><strong>M-b</strong></p><h3 id="将光标移动到行头"><a href="#将光标移动到行头" class="headerlink" title="将光标移动到行头"></a>将光标移动到行头</h3><p><strong>C-a</strong></p><p>ahead</p><h3 id="将光标移动到行尾"><a href="#将光标移动到行尾" class="headerlink" title="将光标移动到行尾"></a>将光标移动到行尾</h3><p><strong>C-e</strong></p><p>end</p><h3 id="将光标移动到一句的头部"><a href="#将光标移动到一句的头部" class="headerlink" title="将光标移动到一句的头部"></a>将光标移动到一句的头部</h3><p><strong>M-a</strong></p><h3 id="将光标移动到一句的尾部"><a href="#将光标移动到一句的尾部" class="headerlink" title="将光标移动到一句的尾部"></a>将光标移动到一句的尾部</h3><p><strong>M-e</strong></p><h3 id="将光标移动到所有文字的最开头"><a href="#将光标移动到所有文字的最开头" class="headerlink" title="将光标移动到所有文字的最开头"></a>将光标移动到所有文字的最开头</h3><p><strong>M-&lt;</strong>(实际上是alt+shift+,)</p><h3 id="将光标移动到所有文字的最末尾"><a href="#将光标移动到所有文字的最末尾" class="headerlink" title="将光标移动到所有文字的最末尾"></a>将光标移动到所有文字的最末尾</h3><p><strong>M-&gt;</strong>(实际上是alt+shift+.)</p><h3 id="光标选中多个文字"><a href="#光标选中多个文字" class="headerlink" title="光标选中多个文字"></a>光标选中多个文字</h3><p><strong>C-shift-r C-shift-f</strong></p><h2 id="移动行块"><a href="#移动行块" class="headerlink" title="移动行块"></a>移动行块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(use-package drag-stuff</span><br><span class="line">             :bind ((&quot;&lt;M-up&gt;&quot; . drag-stuff-up)</span><br><span class="line">                    (&quot;&lt;M-down&gt;&quot; . drag-stuff-down)))</span><br></pre></td></tr></table></figure><p><strong>M-向上箭头</strong></p><h2 id="互换顺序"><a href="#互换顺序" class="headerlink" title="互换顺序"></a>互换顺序</h2><h3 id="光标前后两个字符互换"><a href="#光标前后两个字符互换" class="headerlink" title="光标前后两个字符互换"></a>光标前后两个字符互换</h3><p><strong>C-t</strong></p><h3 id="光标前后两个单词互换"><a href="#光标前后两个单词互换" class="headerlink" title="光标前后两个单词互换"></a>光标前后两个单词互换</h3><p><strong>M-t</strong></p><h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><p><strong>M-w</strong></p><h2 id="剪切"><a href="#剪切" class="headerlink" title="剪切"></a>剪切</h2><p><strong>C-w</strong></p><h2 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h2><p><strong>C-y</strong></p><p>yank</p><h2 id="参数控制"><a href="#参数控制" class="headerlink" title="参数控制"></a>参数控制</h2><p>大部分的Emacs命令接受数字参数，并且对于多数命令而言，这些数字参数的作用是<strong>指定命令的重复次数</strong></p><p><strong>先输入C-u ，然后输入数字作为参数，最后再输入命令</strong></p><p>如： C-u 8 C-f 会向前移动8个字符</p><p>某些Emacs命令接收数字参数当作他用</p><p>比如： C-v 和 M-v</p><p>当给定一一个参数时，他们将滚动指定的行数而不是屏数</p><p>即C-u 8 C-v会将光标向下移动8行</p><h2 id="窗格"><a href="#窗格" class="headerlink" title="窗格"></a>窗格</h2><h3 id="关闭多余的窗格"><a href="#关闭多余的窗格" class="headerlink" title="关闭多余的窗格"></a>关闭多余的窗格</h3><p><strong>C-x 1</strong></p><p>只保留一个窗格，也就是关掉其它所有的窗格，将保留的窗格扩大到整个屏幕，同时关掉所有其它窗格</p><p>有一系列命令是以CONTROL-x开始的，这些命令许多都跟窗格，文件，缓冲区等等相关</p><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><h3 id="插入多个相同字符"><a href="#插入多个相同字符" class="headerlink" title="插入多个相同字符"></a>插入多个相同字符</h3><p><strong>C-u 8</strong> <strong>*</strong></p><p>这将会插入<strong><strong>*</strong></strong></p><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><h3 id="删除光标后的一个字符"><a href="#删除光标后的一个字符" class="headerlink" title="删除光标后的一个字符"></a>删除光标后的一个字符</h3><p><strong>C-d</strong></p><p>delete</p><p>相当于键盘的delete键</p><h3 id="删除光标后的一个词"><a href="#删除光标后的一个词" class="headerlink" title="删除光标后的一个词"></a>删除光标后的一个词</h3><p><strong>M-d</strong></p><h3 id="删除光标到行尾之间的字符"><a href="#删除光标到行尾之间的字符" class="headerlink" title="删除光标到行尾之间的字符"></a>删除光标到行尾之间的字符</h3><p><strong>C-k</strong></p><p>kill</p><h3 id="删除光标到句尾之间的字符"><a href="#删除光标到句尾之间的字符" class="headerlink" title="删除光标到句尾之间的字符"></a>删除光标到句尾之间的字符</h3><p><strong>M-k</strong></p><p>注意,“移除（kill）”和“删除（delete）”的不同在于被移除的东西可以被重新插入（在任何位置），而被删除的就不能使用相同的方法重新插入了（不过可以通过撤销一个删除命令来做到，后文会提到）。【实际上，移除掉的东西虽然看起来“消失”了，但实际上被 Emacs 记录了下来，因此还可以找回来；而删除掉的东西虽然也可能还在内存里，但是已经被 Emacs“抛弃”了，所以就找不回来了。】重新插入被移除的文字称为“召回（yank）”。一般而言，那些可能消除很多文字的命令会把消除掉的文字记录下来（它们被设定成了“可召回”），而那些只消除一个字符或者只消除空白的命令就不会记录被消除的内容（自然你也就无法召回了）。</p><p>注意，单独的 C-k 会把一行的内容移除，而第二个 C-k 则会移除换行符，并使其后所有的行都向上移动。C-k 处理数字参数的方式很特别，它会把参数指定的那么多行连同其后的换行符一起移除，而不仅仅是重复 C-k 而已。比如 C-u 2C-k 会把两行以及它们的换行符移除；而如果只是输入 C-k 两次显然不是这个结果。</p><h2 id="召回（粘贴）"><a href="#召回（粘贴）" class="headerlink" title="召回（粘贴）"></a>召回（粘贴）</h2><p>重新插入被移除的文字恢复的动作称为“召回（yanking）”。（就好像把别人从你身边移走的东西又猛力地拉回来。）你可以在你删除文字的地方召回，也可以在别的地方召回，还可以多次召回同样的文字以得到它的多个拷贝。很多其它的编辑器把移除和召回叫做“剪切”和“粘贴” </p><h3 id="召回最近一次移除的内容"><a href="#召回最近一次移除的内容" class="headerlink" title="召回最近一次移除的内容"></a>召回最近一次移除的内容</h3><p><strong>C-y</strong></p><p>yanking</p><h3 id="召回前几次移除的内容"><a href="#召回前几次移除的内容" class="headerlink" title="召回前几次移除的内容"></a>召回前几次移除的内容</h3><p><strong>M-y</strong></p><p>需要先C-y之后再M-y</p><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><p><strong>C-/</strong></p><p>或者 <strong>C-_</strong> 或者 <strong>C-x u</strong></p><h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><p>Emacs 可以向前或向后搜索字符串（“字符串”指的是一组连续的字符）。</p><p>搜索命令是一个<strong>移动光标的命令</strong>：搜索成功后，光标会停留在搜索目标出现的地方</p><h3 id="向前搜索"><a href="#向前搜索" class="headerlink" title="向前搜索"></a>向前搜索</h3><p><strong>C-s</strong></p><p>在一次渐进式搜索中，Emacs 会尝试跳到搜索目标出现的位置。要跳到下一个命中位置，就再按一次 C-s。如果找不到目标，Emacs 会发出“哔”的一声，告诉你搜索失败。在整个过程中，都可以用 C-g 来终止搜索。【你会发现 C-g 会让光标回到搜索开始的位置，而 <Return> 则让光标留在搜索结果上，这是很有用的功能】</p><h3 id="向后搜索"><a href="#向后搜索" class="headerlink" title="向后搜索"></a>向后搜索</h3><p><strong>C-r</strong></p><h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h2><p><strong>M-%</strong></p><p>替换时按下y确认替换，n跳过本处的替换，！全部替换</p><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><h3 id="寻找一个文件"><a href="#寻找一个文件" class="headerlink" title="寻找一个文件"></a>寻找一个文件</h3><p><strong>C-x C-f</strong></p><h3 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h3><p><strong>C-x C-s</strong></p><p>这条命令把 Emacs 中的文字存储到文件中。第一次存盘的时候 Emacs 会将原文件重命名以备份。重命名的规则通常是在原文件名之后添加一个“~”字符。可以关闭这个特性。</p><h2 id="缓冲区"><a href="#缓冲区" class="headerlink" title="缓冲区"></a>缓冲区</h2><p>Emacs 把每个编辑中的文件都放在一个称为“缓冲区（buffer）”的地方。每寻找到一个文件，Emacs 就在其内部开辟一个缓冲区。用下面的命令可以列出当前所有的缓冲区：</p><p>   C-x C-b  列出缓冲区</p><p>输入 C-x 1 离开缓冲区列表</p><p>不管存在多少缓冲区，任何时候都只能有一个“当前”缓冲区，也就是你正在编辑的这个。如果你想编辑其它的缓冲区，就必须“切换”过去。上面讲过，用C-x C-f 是一种办法。不过还有一个更简单的办法，那就是用 C-x b。用这条命令，你必须输入缓冲区的名称。</p><p>大多数情况下，缓冲区与跟其对应的文件是同名的（不包括目录名），不过这也不是绝对的。用 C-x C-b 得到的缓冲区列表总是显示缓冲区名。</p><p>缓冲区未必有对应文件。显示缓冲区列表的缓冲区（叫做“<em>Buffer List</em>”）就是这样。这个 TUTORIAL.cn 缓冲区起初没有对应的文件，但是现在有了，因为在前一节你输入了 C-x C-s ， 将它保存成了一个文件。</p><p>“<em>Messages</em>”缓冲区也没有对应文件，这个缓冲区里存放的都是在 Emacs 底部出现的消息。</p><p>如果你对某个文件做了些修改，然后切换到另一个文件，这个动作并不会帮你把前一个文件存盘。对第一个文件的修改仍然仅存在于 Emacs 中，也就是在它对应的缓冲区里。并且，对第二个文件的修改也不会影响到第一个件。这很有用，但也意味着你需要一个简便的办法来保存第一个文件的缓冲区。先切换回那个缓冲区，再用 C-x C-s 存盘，太麻烦了。你需要一个更简便的方法，而 Emacs 已经为你准备好了：</p><p>   C-x s  保存多个缓冲区</p><p>C-x s 会找出所有已被修改但尚未存盘的缓冲区，然后向你逐个询问：是否需要存盘？</p><h2 id="命令集扩展"><a href="#命令集扩展" class="headerlink" title="命令集扩展"></a>命令集扩展</h2><p>Emacs 的命令就像天上的星星，数也数不清。把它们都对应到 CONTROL 和 META组合键上显然是不可能的。Emacs 用扩展（eXtend）命令来解决这个问题，扩展命令有两种风格：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C-x     字符扩展。  C-x 之后输入另一个字符或者组合键。</span><br><span class="line">    M-x     命令名扩展。M-x 之后输入一个命令名</span><br></pre></td></tr></table></figure><h3 id="行排序"><a href="#行排序" class="headerlink" title="行排序"></a>行排序</h3><p><strong>M-x sort-lines</strong></p><h3 id="统计字数"><a href="#统计字数" class="headerlink" title="统计字数"></a>统计字数</h3><p>整个buffer统计</p><p><strong>M-x count-words-region</strong></p><p>选中区域统计</p><p><strong>M-x count-words</strong></p><h2 id="自动保存"><a href="#自动保存" class="headerlink" title="自动保存"></a>自动保存</h2><p>如果你已经修改了一个文件，但是还没来得及存盘你的计算机就罢工了，那么你所做的修改就很可能会丢失。为了避免这样的不幸发生，Emacs 会定期将正在编辑的文件写入一个“自动保存”文件中。自动保存文件的文件名的头尾各有一个“#”字符，比如你正在编辑的文件叫“hello.c”，那么它的自动保存文件就叫“#hello.c#”。这个文件会在常存盘之后被 Emacs 删除。</p><p>所以，假如不幸真的发生了，你大可以从容地打开原来的文件（注意不是自动保存文件）然后输入 M-x recover file <Return> 来恢复你的自动保存文件。在提示确认的时候，输入 yes<Return>。</p><h2 id="状态栏"><a href="#状态栏" class="headerlink" title="状态栏"></a>状态栏</h2><p>位于回显区正上方的一行被称为“状态栏”。状态栏上会显示一些信息，比如：</p><p>-:**- TUTORIAL.cn 63% L749 (Fundamental)</p><ul><li>状态栏显示了 Emacs 的状态和你正在编辑的文字的一些信息。</li><li>你应该知道文件名的意思吧？就是你找到的那个文件嘛。</li><li>-NN%— 显示的是光标在全文中的位置。如果位于文件的开头，那么就显示 —Top— 而不是 —00%—；如果位于文件的末尾，就显示 —Bot—。如果文件很小，一屏就足以显示全部内容，那么状态栏会显示 —All—。</li><li>“L” 和其后的数字给出了光标所在行的行号。</li><li>最开头的星号（*）表示你已经对文字做过改动。刚刚打开的文件肯定没有被改动过，所以状态栏上显示的不是星号而是短线（-）。</li><li>状态栏上小括号里的内容告诉你当前正在使用的编辑模式。缺省的模式是Fundamental，就是你现在正在使用的这个。它是一种“主模式”。</li></ul><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><p>主模式都是可以用 M-x 启动的扩展命令，M-x fundamental-mode 就可以切换到 Fundamental模式。</p><p>M-x text-mode <Return>。切换到文本模式</p><p>用 C-h m 可以查看当前主模式的文档，输入 C-x 1 关掉文档窗格</p><ul><li>主模式之所以称之为“主（major）”模式，是因为同时还有“辅模式”（minormode）存在。辅模式并不能替代主模式，而是提供一些辅助的功能。每个辅模式都可以独立地开启和关闭，跟其它辅模式无关，跟主模式也无关。所以你可以不使用辅模式，也可以只使用一个或同时使用多个辅模式。</li><li>有一个叫做自动折行（Auto Fill）的辅模式很有用，特别是在编辑自然语言文本的时候。启用自动折行后，Emacs 会在你打字超出一行边界时自动替你换行。</li><li>用 M-x auto-fill-mode <Return> 启动自动折行模式。再用一次这条命令，自动折行模式会被关闭。也就是说，如果自动折行模式没有被开启，这个命令会开启它；如果已经开启了，这个命令会关闭它。所以我们说，这个命令可以用来开关（toggle）”模式。</li><li>行边界通常被设定为 70 个字符【这里指英文字符】，你可以用 C-x f 命令配合数字参数来重新设定它。</li><li>如果你在段落的中间做了一些修改，那么自动折行模式不会替你把整个段落重新折行，你需要用 M-q 手动折行。注意，光标必须位于你需要折行的那一段里</li></ul><h2 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h2><p>Buffer切换</p><p>C-x b</p><p>杀死当前Buffer</p><p>C-x k</p><p>批量管理Buffer</p><p>C-x C-b ;; 进入Buffer列表</p><ul><li>d ;; 标记删除</li><li>u ;; 取消当前行标记</li><li>U ;; 取消全部标记</li><li>x ;; 执行操作</li><li>? ;; 查看按键帮助</li></ul><h2 id="多窗格（分屏）"><a href="#多窗格（分屏）" class="headerlink" title="多窗格（分屏）"></a>多窗格（分屏）</h2><h3 id="将屏幕划分为两个窗格"><a href="#将屏幕划分为两个窗格" class="headerlink" title="将屏幕划分为两个窗格"></a>将屏幕划分为两个窗格</h3><p><strong>C-x 0</strong></p><p>关闭当前分屏</p><p><strong>C-x 1</strong></p><p>只保留当前分屏</p><p><strong>C-x 2</strong></p><p>上下分屏</p><p><strong>C-x 3</strong></p><p>左右分屏</p><h3 id="分屏宽度调整"><a href="#分屏宽度调整" class="headerlink" title="分屏宽度调整"></a>分屏宽度调整</h3><p>增加高度 C-x ^</p><p>增加/减少宽度 C-x {C-x }</p><h3 id="将光标移动到其它窗格"><a href="#将光标移动到其它窗格" class="headerlink" title="将光标移动到其它窗格"></a>将光标移动到其它窗格</h3><p><strong>C-x o</strong></p><p>o指的是other</p><p>当你在一个窗格中编辑，但用另一个窗格作为参考的时候，C-M-v 是很有用的命令。无需离开被选中的窗格，你就可以用 C-M-v 命令滚动另外一个窗格中的文字。【比如翻译和校对就很适合用这种方式进行。】</p><p>（在上方窗格里）输入 C-x 1 关掉下方窗格</p><p>当分屏很多的时候效率非常低。通过ace-window可快速进行窗口间的跳转。类似的插件较多，但该款为最佳方案。</p><p><strong>M-o</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(use-package ace-window </span><br><span class="line">             :bind ((&quot;M-o&quot; . &#x27;ace-window)))</span><br></pre></td></tr></table></figure><p><img src="./emacs.assets/1673110725303-6cb4c6aa-b022-46d2-827b-1b7befb54e8b.png" alt="img"></p><h3 id="在新窗格里打开文件"><a href="#在新窗格里打开文件" class="headerlink" title="在新窗格里打开文件"></a>在新窗格里打开文件</h3><p><strong>C-x 4 C-f</strong></p><h2 id="多窗口"><a href="#多窗口" class="headerlink" title="多窗口"></a>多窗口</h2><h3 id="新建一个窗口"><a href="#新建一个窗口" class="headerlink" title="新建一个窗口"></a>新建一个窗口</h3><p><strong>M-x make-frame</strong></p><h3 id="关闭选中窗口"><a href="#关闭选中窗口" class="headerlink" title="关闭选中窗口"></a>关闭选中窗口</h3><p><strong>M-x delete-frame</strong></p><h2 id="获得更多帮助"><a href="#获得更多帮助" class="headerlink" title="获得更多帮助"></a>获得更多帮助</h2><p>Emacs 提供了一些命令来查看 Emacs 的命令文档，这些命令都以 CONTROL-h 开头，这个字符也因此被称为“帮助（Help）字符”</p><p>最基本的帮助功能是 C-h c。输入 C-h c 之后再输入一个组合键，Emacs 会给出这个命令的简要说明。</p><p>输入 C-h c C-p。</p><p>显示的消息应该会是这样：</p><p>​    C-p runs the command previous-line</p><p>这条消息显示了 C-p 命令对应的函数名。命令的功能由函数完成，所以函数名本身也可以被看成是最简单的文档――至少对于你已经学过的命令来说，它们的函数名足以解释它们的功能了。</p><p>想得到更多的信息，请把 C-h c 换成 C-h k 试试看。</p><p>输入 C-h k C-p。</p><p>上面的命令会新打开一个 Emacs 窗格以显示函数的名称及其文档。你读完之后可以用 C-x 1 关掉这个帮助窗格。当然你并不需要立即这样做，你完全可以先在编辑窗格里做点别的事情，然后再关掉帮助窗格。</p><p>C-h f 解释一个函数。需要输入函数名。</p><p>输入 C-h f previous-line <Return>。Emacs 会给出它所知道的所有有关“实现 C-p 命令功能的函数”的信息</p><p>C-h v 用来显示 Emacs 变量的文档。Emacs 变量可以被用来“定制 Emacs 的行为”。同样，你需要输入变量的名称。</p><p>C-h a 相关命令搜索（Command Apropos）。 输入一个关键词然后 Emacs 会列出所有命令名中包含此关键词 的命令。这些命令全都可以用 M-x 来启动。对于某些命令来说， 相关命令搜索还会列出一两个组合键。</p><p>输入 C-h a file <Return>。</p><p>Emacs 会在另一个窗格里显示一个 M-x 命令列表，这个列表包含了所有名称中含有“file”的命令。你可以看到像“C-x C-f”这样的组合键显示在“find-file”这样的命令名的旁边。</p><p>C-h i 阅读手册（也就是通常讲的 Info）。 这个命令会打开一个称为“<em>info</em>”的特殊缓冲区，在那里， 你可以阅读安装在系统里的软件包使用手册。要读 Emacs 的使 用手册，按 m emacs <Return> 就可以了。如果你之前从没用 过 Info 系统，那么请按“?”，Emacs 会带你进入 Info 的使 用指南。在看完本快速指南之后，Emacs Info 会成为你的主要 参考文档。</p>]]></content>
      
      
      <categories>
          
          <category> emacs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> emacs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
